#!/bin/false
#

itcl::class ::EsrFilter {

    constructor { args } {
        eval configure $args
    }

    destructor {
    }

# Include any inherited super-method classes here:
    inherit EsrFilterExt

# The root for this pass is tFilterObjects.
    public method getTIPFilterRowStatus { args } {}
    public method setTIPFilterRowStatus { args } {}
    public method getTIPFilterScope { args } {}
    public method setTIPFilterScope { args } {}
    public method getTIPFilterDescription { args } {}
    public method setTIPFilterDescription { args } {}
    public method getTIPFilterDefaultAction { args } {}
    public method setTIPFilterDefaultAction { args } {}
    public method getTIPFilterRadiusInsertPt { args } {}
    public method setTIPFilterRadiusInsertPt { args } {}
    public method getTIPFilterRadiusInsertSize { args } {}
    public method setTIPFilterRadiusInsertSize { args } {}
    public method getTIPFilterCreditCntrlInsertPt { args } {}
    public method setTIPFilterCreditCntrlInsertPt { args } {}
    public method getTIPFilterCreditCntrlInsertSize { args } {}
    public method setTIPFilterCreditCntrlInsertSize { args } {}
    public method getTIPFilterSubInsertHighWmark { args } {}
    public method setTIPFilterSubInsertHighWmark { args } {}
    public method getTIPFilterSubInsertLowWmark { args } {}
    public method setTIPFilterSubInsertLowWmark { args } {}
    public method getTIpFilterCreditCntrlNbrInsertd { args } {}
    public method getTIpFilterRadiusNbrInsertd { args } {}
    public method getTIpFilterName { args } {}
    public method setTIpFilterName { args } {}
    public method getTIPFilterHostSharedInsertPt { args } {}
    public method setTIPFilterHostSharedInsertPt { args } {}
    public method getTIPFilterHostSharedInsertSize { args } {}
    public method setTIPFilterHostSharedInsertSize { args } {}
    public method getTIpFilterHostSharedNbrInsertd { args } {}
    public method getTIPFilterHostSharedHighWmark { args } {}
    public method setTIPFilterHostSharedHighWmark { args } {}
    public method getTIPFilterHostSharedLowWmark { args } {}
    public method setTIPFilterHostSharedLowWmark { args } {}
    public method getTIPFilterNbrHostSharedFltrs { args } {}
    public method getTIPFilterSharedPccRuleInsrtPt { args } {}
    public method setTIPFilterSharedPccRuleInsrtPt { args } {}
    public method getTIPFilterSharedPccRuleInsrtSize { args } {}
    public method setTIPFilterSharedPccRuleInsrtSize { args } {}
    public method getTIPFilterSharedPccRuleNbrInsrtd { args } {}
    public method getTIPFilterChainToSystemFilter { args } {}
    public method setTIPFilterChainToSystemFilter { args } {}
    public method getTIPFilterParamsRowStatus { args } {}
    public method setTIPFilterParamsRowStatus { args } {}
    public method getTIPFilterParamsLogId { args } {}
    public method setTIPFilterParamsLogId { args } {}
    public method getTIPFilterParamsDescription { args } {}
    public method setTIPFilterParamsDescription { args } {}
    public method getTIPFilterParamsAction { args } {}
    public method setTIPFilterParamsAction { args } {}
    public method getTIPFilterParamsForwardNH { args } {}
    public method setTIPFilterParamsForwardNH { args } {}
    public method getTIPFilterParamsForwardNHIndirect { args } {}
    public method setTIPFilterParamsForwardNHIndirect { args } {}
    public method getTIPFilterParamsRemarkDSCP { args } {}
    public method setTIPFilterParamsRemarkDSCP { args } {}
    public method getTIPFilterParamsRemarkDSCPMask { args } {}
    public method setTIPFilterParamsRemarkDSCPMask { args } {}
    public method getTIPFilterParamsRemarkDot1p { args } {}
    public method setTIPFilterParamsRemarkDot1p { args } {}
    public method getTIPFilterParamsSourceIpAddr { args } {}
    public method setTIPFilterParamsSourceIpAddr { args } {}
    public method getTIPFilterParamsSourceIpMask { args } {}
    public method setTIPFilterParamsSourceIpMask { args } {}
    public method getTIPFilterParamsDestinationIpAddr { args } {}
    public method setTIPFilterParamsDestinationIpAddr { args } {}
    public method getTIPFilterParamsDestinationIpMask { args } {}
    public method setTIPFilterParamsDestinationIpMask { args } {}
    public method getTIPFilterParamsProtocol { args } {}
    public method setTIPFilterParamsProtocol { args } {}
    public method getTIPFilterParamsSourcePortValue1 { args } {}
    public method setTIPFilterParamsSourcePortValue1 { args } {}
    public method getTIPFilterParamsSourcePortValue2 { args } {}
    public method setTIPFilterParamsSourcePortValue2 { args } {}
    public method getTIPFilterParamsSourcePortOperator { args } {}
    public method setTIPFilterParamsSourcePortOperator { args } {}
    public method getTIPFilterParamsDestPortValue1 { args } {}
    public method setTIPFilterParamsDestPortValue1 { args } {}
    public method getTIPFilterParamsDestPortValue2 { args } {}
    public method setTIPFilterParamsDestPortValue2 { args } {}
    public method getTIPFilterParamsDestPortOperator { args } {}
    public method setTIPFilterParamsDestPortOperator { args } {}
    public method getTIPFilterParamsDSCP { args } {}
    public method setTIPFilterParamsDSCP { args } {}
    public method getTIPFilterParamsFragment { args } {}
    public method setTIPFilterParamsFragment { args } {}
    public method getTIPFilterParamsOptionPresent { args } {}
    public method setTIPFilterParamsOptionPresent { args } {}
    public method getTIPFilterParamsIpOptionValue { args } {}
    public method setTIPFilterParamsIpOptionValue { args } {}
    public method getTIPFilterParamsIpOptionMask { args } {}
    public method setTIPFilterParamsIpOptionMask { args } {}
    public method getTIPFilterParamsMultipleOption { args } {}
    public method setTIPFilterParamsMultipleOption { args } {}
    public method getTIPFilterParamsTcpSyn { args } {}
    public method setTIPFilterParamsTcpSyn { args } {}
    public method getTIPFilterParamsTcpAck { args } {}
    public method setTIPFilterParamsTcpAck { args } {}
    public method getTIPFilterParamsIcmpCode { args } {}
    public method setTIPFilterParamsIcmpCode { args } {}
    public method getTIPFilterParamsIcmpType { args } {}
    public method setTIPFilterParamsIcmpType { args } {}
    public method getTIPFilterParamsCflowdSample { args } {}
    public method setTIPFilterParamsCflowdSample { args } {}
    public method getTIPFilterParamsCflowdIfSample { args } {}
    public method setTIPFilterParamsCflowdIfSample { args } {}
    public method getTIPFilterParamsForwardNHInterface { args } {}
    public method setTIPFilterParamsForwardNHInterface { args } {}
    public method getTIPFilterParamsIngressHitCount { args } {}
    public method getTIPFilterParamsEgressHitCount { args } {}
    public method getTIPFilterParamsLogInstantiated { args } {}
    public method getTIPFilterParamsForwardRedPlcy { args } {}
    public method setTIPFilterParamsForwardRedPlcy { args } {}
    public method getTIPFilterParamsActiveDest { args } {}
    public method getTIPFilterParamsFwdSvcId { args } {}
    public method getTIPFilterParamsFwdSapPortId { args } {}
    public method setTIPFilterParamsFwdSapPortId { args } {}
    public method getTIPFilterParamsFwdSapEncapVal { args } {}
    public method setTIPFilterParamsFwdSapEncapVal { args } {}
    public method getTIPFilterParamsFwdSdpBind { args } {}
    public method setTIPFilterParamsFwdSdpBind { args } {}
    public method getTIPFilterParamsTimeRangeName { args } {}
    public method setTIPFilterParamsTimeRangeName { args } {}
    public method getTIPFilterParamsTimeRangeState { args } {}
    public method getTIPFilterParamsRedirectURL { args } {}
    public method setTIPFilterParamsRedirectURL { args } {}
    public method getTIPFilterParamsSrcIpFullMask { args } {}
    public method setTIPFilterParamsSrcIpFullMask { args } {}
    public method getTIPFilterParamsDestIpFullMask { args } {}
    public method setTIPFilterParamsDestIpFullMask { args } {}
    public method getTIPFilterParamsIngrHitByteCount { args } {}
    public method getTIPFilterParamsEgrHitByteCount { args } {}
    public method getTIPFilterParamsFwdRtrId { args } {}
    public method setTIPFilterParamsFwdRtrId { args } {}
    public method getTIPFilterParamsSrcRouteOption { args } {}
    public method setTIPFilterParamsSrcRouteOption { args } {}
    public method getTIPFilterParamsSrcIpPrefixList { args } {}
    public method setTIPFilterParamsSrcIpPrefixList { args } {}
    public method getTIPFilterParamsDstIpPrefixList { args } {}
    public method setTIPFilterParamsDstIpPrefixList { args } {}
    public method getTIPFilterParamsPortSelector { args } {}
    public method setTIPFilterParamsPortSelector { args } {}
    public method getTIPFilterParamsSrcPortList { args } {}
    public method setTIPFilterParamsSrcPortList { args } {}
    public method getTIPFilterParamsDstPortList { args } {}
    public method setTIPFilterParamsDstPortList { args } {}
    public method getTIPFilterParamsRdirAllwRadOvrd { args } {}
    public method setTIPFilterParamsRdirAllwRadOvrd { args } {}
    public method getTIPFilterParamsNatPolicyName { args } {}
    public method setTIPFilterParamsNatPolicyName { args } {}
    public method getTIPFilterParamsFwdLsp { args } {}
    public method setTIPFilterParamsFwdLsp { args } {}
    public method getTIPFilterParamsFwdLspRtrId { args } {}
    public method setTIPFilterParamsFwdLspRtrId { args } {}
    public method getTMacFilterRowStatus { args } {}
    public method setTMacFilterRowStatus { args } {}
    public method getTMacFilterScope { args } {}
    public method setTMacFilterScope { args } {}
    public method getTMacFilterDescription { args } {}
    public method setTMacFilterDescription { args } {}
    public method getTMacFilterDefaultAction { args } {}
    public method setTMacFilterDefaultAction { args } {}
    public method getTMacFilterType { args } {}
    public method setTMacFilterType { args } {}
    public method getTMacFilterName { args } {}
    public method setTMacFilterName { args } {}
    public method getTMacFilterParamsRowStatus { args } {}
    public method setTMacFilterParamsRowStatus { args } {}
    public method getTMacFilterParamsLogId { args } {}
    public method setTMacFilterParamsLogId { args } {}
    public method getTMacFilterParamsDescription { args } {}
    public method setTMacFilterParamsDescription { args } {}
    public method getTMacFilterParamsAction { args } {}
    public method setTMacFilterParamsAction { args } {}
    public method getTMacFilterParamsFrameType { args } {}
    public method setTMacFilterParamsFrameType { args } {}
    public method getTMacFilterParamsSrcMAC { args } {}
    public method setTMacFilterParamsSrcMAC { args } {}
    public method getTMacFilterParamsSrcMACMask { args } {}
    public method setTMacFilterParamsSrcMACMask { args } {}
    public method getTMacFilterParamsDstMAC { args } {}
    public method setTMacFilterParamsDstMAC { args } {}
    public method getTMacFilterParamsDstMACMask { args } {}
    public method setTMacFilterParamsDstMACMask { args } {}
    public method getTMacFilterParamsDot1pValue { args } {}
    public method setTMacFilterParamsDot1pValue { args } {}
    public method getTMacFilterParamsDot1pMask { args } {}
    public method setTMacFilterParamsDot1pMask { args } {}
    public method getTMacFilterParamsEtherType { args } {}
    public method setTMacFilterParamsEtherType { args } {}
    public method getTMacFilterParamsDsap { args } {}
    public method setTMacFilterParamsDsap { args } {}
    public method getTMacFilterParamsDsapMask { args } {}
    public method setTMacFilterParamsDsapMask { args } {}
    public method getTMacFilterParamsSsap { args } {}
    public method setTMacFilterParamsSsap { args } {}
    public method getTMacFilterParamsSsapMask { args } {}
    public method setTMacFilterParamsSsapMask { args } {}
    public method getTMacFilterParamsSnapPid { args } {}
    public method setTMacFilterParamsSnapPid { args } {}
    public method getTMacFilterParamsSnapOui { args } {}
    public method setTMacFilterParamsSnapOui { args } {}
    public method getTMacFilterParamsIngressHitCount { args } {}
    public method getTMacFilterParamsEgressHitCount { args } {}
    public method getTMacFilterParamsLogInstantiated { args } {}
    public method getTMacFilterParamsFwdSvcId { args } {}
    public method getTMacFilterParamsFwdSapPortId { args } {}
    public method setTMacFilterParamsFwdSapPortId { args } {}
    public method getTMacFilterParamsFwdSapEncapVal { args } {}
    public method setTMacFilterParamsFwdSapEncapVal { args } {}
    public method getTMacFilterParamsFwdSdpBind { args } {}
    public method setTMacFilterParamsFwdSdpBind { args } {}
    public method getTMacFilterParamsTimeRangeName { args } {}
    public method setTMacFilterParamsTimeRangeName { args } {}
    public method getTMacFilterParamsTimeRangeState { args } {}
    public method getTMacFilterParamsRedirectURL { args } {}
    public method setTMacFilterParamsRedirectURL { args } {}
    public method getTMacFilterParamsIngrHitByteCount { args } {}
    public method getTMacFilterParamsEgrHitByteCount { args } {}
    public method getTMacFilterParamsLowISID { args } {}
    public method setTMacFilterParamsLowISID { args } {}
    public method getTMacFilterParamsHighISID { args } {}
    public method setTMacFilterParamsHighISID { args } {}
    public method getTMacFilterParamsInnerTagValue { args } {}
    public method setTMacFilterParamsInnerTagValue { args } {}
    public method getTMacFilterParamsInnerTagMask { args } {}
    public method setTMacFilterParamsInnerTagMask { args } {}
    public method getTMacFilterParamsOuterTagValue { args } {}
    public method setTMacFilterParamsOuterTagValue { args } {}
    public method getTMacFilterParamsOuterTagMask { args } {}
    public method setTMacFilterParamsOuterTagMask { args } {}
    public method getTMacFilterParamsEsi { args } {}
    public method setTMacFilterParamsEsi { args } {}
    public method getTMacFilterParamsFwdEsiSvcId { args } {}
    public method setTMacFilterParamsFwdEsiSvcId { args } {}
    public method getTMacFilterParamsPbrDwnAction { args } {}
    public method setTMacFilterParamsPbrDwnAction { args } {}
    public method getTFilterLogRowStatus { args } {}
    public method setTFilterLogRowStatus { args } {}
    public method getTFilterLogDestination { args } {}
    public method setTFilterLogDestination { args } {}
    public method getTFilterLogDescription { args } {}
    public method setTFilterLogDescription { args } {}
    public method getTFilterLogMaxNumEntries { args } {}
    public method setTFilterLogMaxNumEntries { args } {}
    public method getTFilterLogSysLogId { args } {}
    public method setTFilterLogSysLogId { args } {}
    public method getTFilterLogFileId { args } {}
    public method setTFilterLogFileId { args } {}
    public method getTFilterLogStopOnFull { args } {}
    public method setTFilterLogStopOnFull { args } {}
    public method getTFilterLogEnabled { args } {}
    public method setTFilterLogEnabled { args } {}
    public method getTFilterLogSummaryEnabled { args } {}
    public method setTFilterLogSummaryEnabled { args } {}
    public method getTFilterLogSummaryCrit1 { args } {}
    public method setTFilterLogSummaryCrit1 { args } {}
    public method getTFilterLogMaxInstances { args } {}
    public method getTFilterLogInstances { args } {}
    public method getTFilterLogBindings { args } {}
    public method getTFilterDomainLastChanged { args } {}
    public method getTFilterRPRowStatus { args } {}
    public method setTFilterRPRowStatus { args } {}
    public method getTFilterRPDescription { args } {}
    public method setTFilterRPDescription { args } {}
    public method getTFilterRPAdminState { args } {}
    public method setTFilterRPAdminState { args } {}
    public method getTFilterRPVrtrId { args } {}
    public method setTFilterRPVrtrId { args } {}
    public method getTFilterRPActiveDestAddrType { args } {}
    public method getTFilterRPActiveDestAddr { args } {}
    public method getTFilterRPDstStickiness { args } {}
    public method setTFilterRPDstStickiness { args } {}
    public method getTIPv6FilterRowStatus { args } {}
    public method setTIPv6FilterRowStatus { args } {}
    public method getTIPv6FilterScope { args } {}
    public method setTIPv6FilterScope { args } {}
    public method getTIPv6FilterDescription { args } {}
    public method setTIPv6FilterDescription { args } {}
    public method getTIPv6FilterDefaultAction { args } {}
    public method setTIPv6FilterDefaultAction { args } {}
    public method getTIPv6FilterRadiusInsertPt { args } {}
    public method setTIPv6FilterRadiusInsertPt { args } {}
    public method getTIPv6FilterRadiusInsertSize { args } {}
    public method setTIPv6FilterRadiusInsertSize { args } {}
    public method getTIPv6FilterCreditCntrlInsertPt { args } {}
    public method setTIPv6FilterCreditCntrlInsertPt { args } {}
    public method getTIPv6FilterCreditCntrlInsertSize { args } {}
    public method setTIPv6FilterCreditCntrlInsertSize { args } {}
    public method getTIPv6FilterSubInsertHighWmark { args } {}
    public method setTIPv6FilterSubInsertHighWmark { args } {}
    public method getTIPv6FilterSubInsertLowWmark { args } {}
    public method setTIPv6FilterSubInsertLowWmark { args } {}
    public method getTIpv6FilterCreditCntrlNbrInsertd { args } {}
    public method getTIpv6FilterRadiusNbrInsertd { args } {}
    public method getTIpv6FilterName { args } {}
    public method setTIpv6FilterName { args } {}
    public method getTIPv6FilterHostSharedInsertPt { args } {}
    public method setTIPv6FilterHostSharedInsertPt { args } {}
    public method getTIPv6FilterHostSharedInsertSize { args } {}
    public method setTIPv6FilterHostSharedInsertSize { args } {}
    public method getTIpv6FilterHostSharedNbrInsertd { args } {}
    public method getTIPv6FilterHostSharedHighWmark { args } {}
    public method setTIPv6FilterHostSharedHighWmark { args } {}
    public method getTIPv6FilterHostSharedLowWmark { args } {}
    public method setTIPv6FilterHostSharedLowWmark { args } {}
    public method getTIPv6FilterNbrHostSharedFltrs { args } {}
    public method getTIPv6FilterSharedPccRuleInsrtPt { args } {}
    public method setTIPv6FilterSharedPccRuleInsrtPt { args } {}
    public method getTIPv6FilterSharedPccRuleInsrtSiz { args } {}
    public method setTIPv6FilterSharedPccRuleInsrtSiz { args } {}
    public method getTIPv6FilterSharedPccRuleNbrInsrt { args } {}
    public method getTIPv6FilterChainToSystemFilter { args } {}
    public method setTIPv6FilterChainToSystemFilter { args } {}
    public method getTIPv6FilterParamsRowStatus { args } {}
    public method setTIPv6FilterParamsRowStatus { args } {}
    public method getTIPv6FilterParamsLogId { args } {}
    public method setTIPv6FilterParamsLogId { args } {}
    public method getTIPv6FilterParamsDescription { args } {}
    public method setTIPv6FilterParamsDescription { args } {}
    public method getTIPv6FilterParamsAction { args } {}
    public method setTIPv6FilterParamsAction { args } {}
    public method getTIPv6FilterParamsForwardNH { args } {}
    public method setTIPv6FilterParamsForwardNH { args } {}
    public method getTIPv6FilterParamsForwardNHIndirect { args } {}
    public method setTIPv6FilterParamsForwardNHIndirect { args } {}
    public method getTIPv6FilterParamsRemarkDSCP { args } {}
    public method setTIPv6FilterParamsRemarkDSCP { args } {}
    public method getTIPv6FilterParamsRemarkDSCPMask { args } {}
    public method setTIPv6FilterParamsRemarkDSCPMask { args } {}
    public method getTIPv6FilterParamsRemarkDot1p { args } {}
    public method setTIPv6FilterParamsRemarkDot1p { args } {}
    public method getTIPv6FilterParamsSourceIpAddr { args } {}
    public method setTIPv6FilterParamsSourceIpAddr { args } {}
    public method getTIPv6FilterParamsSourceIpMask { args } {}
    public method setTIPv6FilterParamsSourceIpMask { args } {}
    public method getTIPv6FilterParamsDestinationIpAddr { args } {}
    public method setTIPv6FilterParamsDestinationIpAddr { args } {}
    public method getTIPv6FilterParamsDestinationIpMask { args } {}
    public method setTIPv6FilterParamsDestinationIpMask { args } {}
    public method getTIPv6FilterParamsNextHeader { args } {}
    public method setTIPv6FilterParamsNextHeader { args } {}
    public method getTIPv6FilterParamsSourcePortValue1 { args } {}
    public method setTIPv6FilterParamsSourcePortValue1 { args } {}
    public method getTIPv6FilterParamsSourcePortValue2 { args } {}
    public method setTIPv6FilterParamsSourcePortValue2 { args } {}
    public method getTIPv6FilterParamsSourcePortOperator { args } {}
    public method setTIPv6FilterParamsSourcePortOperator { args } {}
    public method getTIPv6FilterParamsDestPortValue1 { args } {}
    public method setTIPv6FilterParamsDestPortValue1 { args } {}
    public method getTIPv6FilterParamsDestPortValue2 { args } {}
    public method setTIPv6FilterParamsDestPortValue2 { args } {}
    public method getTIPv6FilterParamsDestPortOperator { args } {}
    public method setTIPv6FilterParamsDestPortOperator { args } {}
    public method getTIPv6FilterParamsDSCP { args } {}
    public method setTIPv6FilterParamsDSCP { args } {}
    public method getTIPv6FilterParamsTcpSyn { args } {}
    public method setTIPv6FilterParamsTcpSyn { args } {}
    public method getTIPv6FilterParamsTcpAck { args } {}
    public method setTIPv6FilterParamsTcpAck { args } {}
    public method getTIPv6FilterParamsIcmpCode { args } {}
    public method setTIPv6FilterParamsIcmpCode { args } {}
    public method getTIPv6FilterParamsIcmpType { args } {}
    public method setTIPv6FilterParamsIcmpType { args } {}
    public method getTIPv6FilterParamsCflowdSample { args } {}
    public method setTIPv6FilterParamsCflowdSample { args } {}
    public method getTIPv6FilterParamsCflowdIfSample { args } {}
    public method setTIPv6FilterParamsCflowdIfSample { args } {}
    public method getTIPv6FilterParamsForwardNHInterface { args } {}
    public method setTIPv6FilterParamsForwardNHInterface { args } {}
    public method getTIPv6FilterParamsIngressHitCount { args } {}
    public method getTIPv6FilterParamsEgressHitCount { args } {}
    public method getTIPv6FilterParamsLogInstantiated { args } {}
    public method getTIPv6FilterParamsForwardRedPlcy { args } {}
    public method setTIPv6FilterParamsForwardRedPlcy { args } {}
    public method getTIPv6FilterParamsActiveDest { args } {}
    public method getTIPv6FilterParamsTimeRangeName { args } {}
    public method setTIPv6FilterParamsTimeRangeName { args } {}
    public method getTIPv6FilterParamsTimeRangeState { args } {}
    public method getTIPv6FilterParamsIngrHitByteCount { args } {}
    public method getTIPv6FilterParamsEgrHitByteCount { args } {}
    public method getTIPv6FilterParamsFwdSvcId { args } {}
    public method getTIPv6FilterParamsFwdSapPortId { args } {}
    public method setTIPv6FilterParamsFwdSapPortId { args } {}
    public method getTIPv6FilterParamsFwdSapEncapVal { args } {}
    public method setTIPv6FilterParamsFwdSapEncapVal { args } {}
    public method getTIPv6FilterParamsFwdSdpBind { args } {}
    public method setTIPv6FilterParamsFwdSdpBind { args } {}
    public method getTIPv6FilterParamsRedirectURL { args } {}
    public method setTIPv6FilterParamsRedirectURL { args } {}
    public method getTIPv6FilterParamsSrcIpPrefixList { args } {}
    public method setTIPv6FilterParamsSrcIpPrefixList { args } {}
    public method getTIPv6FilterParamsDstIpPrefixList { args } {}
    public method setTIPv6FilterParamsDstIpPrefixList { args } {}
    public method getTIPv6FilterParamsFragment { args } {}
    public method setTIPv6FilterParamsFragment { args } {}
    public method getTIPv6FilterParamsHopByHopOpt { args } {}
    public method setTIPv6FilterParamsHopByHopOpt { args } {}
    public method getTIPv6FilterParamsRoutingType0 { args } {}
    public method setTIPv6FilterParamsRoutingType0 { args } {}
    public method getTIPv6FilterParamsPortSelector { args } {}
    public method setTIPv6FilterParamsPortSelector { args } {}
    public method getTIPv6FilterParamsSrcPortList { args } {}
    public method setTIPv6FilterParamsSrcPortList { args } {}
    public method getTIPv6FilterParamsDstPortList { args } {}
    public method setTIPv6FilterParamsDstPortList { args } {}
    public method getTIPv6FilterParamsRdirAllwRadOvrd { args } {}
    public method setTIPv6FilterParamsRdirAllwRadOvrd { args } {}
    public method getTIPv6FilterParamsFwdRtrId { args } {}
    public method setTIPv6FilterParamsFwdRtrId { args } {}
    public method getTIPv6FilterParamsSrcIpFullMask { args } {}
    public method setTIPv6FilterParamsSrcIpFullMask { args } {}
    public method getTIPv6FilterParamsDstIpFullMask { args } {}
    public method setTIPv6FilterParamsDstIpFullMask { args } {}
    public method getTIPv6FilterParamsNatPolicyName { args } {}
    public method setTIPv6FilterParamsNatPolicyName { args } {}
    public method getTIPv6FilterParamsFlowLabel { args } {}
    public method setTIPv6FilterParamsFlowLabel { args } {}
    public method getTIPv6FilterParamsFlowLabelMask { args } {}
    public method setTIPv6FilterParamsFlowLabelMask { args } {}
    public method getTIPv6FilterParamsFwdLsp { args } {}
    public method setTIPv6FilterParamsFwdLsp { args } {}
    public method getTIPv6FilterParamsFwdLspRtrId { args } {}
    public method setTIPv6FilterParamsFwdLspRtrId { args } {}
    public method getTFltrGrpInsrtdEntriesFilterType { args } {}
    public method setTFltrGrpInsrtdEntriesFilterType { args } {}
    public method getTFltrGrpInsrtdEntriesFilterId { args } {}
    public method setTFltrGrpInsrtdEntriesFilterId { args } {}
    public method getTFltrGrpInsrtdEntriesApplication { args } {}
    public method setTFltrGrpInsrtdEntriesApplication { args } {}
    public method getTFltrGrpInsrtdEntriesLocation { args } {}
    public method setTFltrGrpInsrtdEntriesLocation { args } {}
    public method getTFltrGrpInsrtdEntriesResult { args } {}
    public method getTFltrGrpInsrtdEntriesFeedback { args } {}
    public method getTFltrGrpInsrtdEntriesExecute { args } {}
    public method setTFltrGrpInsrtdEntriesExecute { args } {}
    public method getTDhcpFilterTableLastChanged { args } {}
    public method getTDhcpFilterRowStatus { args } {}
    public method setTDhcpFilterRowStatus { args } {}
    public method getTDhcpFilterLastChanged { args } {}
    public method getTDhcpFilterDescription { args } {}
    public method setTDhcpFilterDescription { args } {}
    public method getTDhcpFilterDefAction { args } {}
    public method setTDhcpFilterDefAction { args } {}
    public method getTDhcpFilterParamsTblLastChanged { args } {}
    public method getTDhcpFilterParamsRowStatus { args } {}
    public method setTDhcpFilterParamsRowStatus { args } {}
    public method getTDhcpFilterParamsLastChanged { args } {}
    public method getTDhcpFilterParamsOptionNumber { args } {}
    public method setTDhcpFilterParamsOptionNumber { args } {}
    public method getTDhcpFilterParamsOptionMatch { args } {}
    public method setTDhcpFilterParamsOptionMatch { args } {}
    public method getTDhcpFilterParamsAction { args } {}
    public method setTDhcpFilterParamsAction { args } {}
    public method getTDhcpFilterParamsOptionValue { args } {}
    public method setTDhcpFilterParamsOptionValue { args } {}
    public method getTMacFilterNameTableLastChgd { args } {}
    public method getTMacFilterNameId { args } {}
    public method getTMacFilterNameRowStatus { args } {}
    public method getTMacFilterNameLastChanged { args } {}
    public method getTIpFilterNameTableLastChgd { args } {}
    public method getTIpFilterNameId { args } {}
    public method getTIpFilterNameRowStatus { args } {}
    public method getTIpFilterNameLastChanged { args } {}
    public method getTIpv6FilterNameTableLastChgd { args } {}
    public method getTIpv6FilterNameId { args } {}
    public method getTIpv6FilterNameRowStatus { args } {}
    public method getTIpv6FilterNameLastChanged { args } {}
    public method getTLiReservedBlockTableLastChanged { args } {}
    public method getTLiReservedBlockRowStatus { args } {}
    public method setTLiReservedBlockRowStatus { args } {}
    public method getTLiReservedBlockLastChanged { args } {}
    public method getTLiReservedBlockDescription { args } {}
    public method setTLiReservedBlockDescription { args } {}
    public method getTLiReservedBlockStart { args } {}
    public method setTLiReservedBlockStart { args } {}
    public method getTLiReservedBlockSize { args } {}
    public method setTLiReservedBlockSize { args } {}
    public method getTLiReservedBlockFltrTableLastChg { args } {}
    public method getTLiReservedBlockFltrRowStatus { args } {}
    public method setTLiReservedBlockFltrRowStatus { args } {}
    public method getTLiReservedBlockFltrLastChanged { args } {}
    public method getTLiFilterTableLastChanged { args } {}
    public method getTLiFilterRowStatus { args } {}
    public method setTLiFilterRowStatus { args } {}
    public method getTLiFilterLastChanged { args } {}
    public method getTLiFilterDescription { args } {}
    public method setTLiFilterDescription { args } {}
    public method getTLiFilterAssociationTableLastChg { args } {}
    public method getTLiFilterAssociationRowStatus { args } {}
    public method setTLiFilterAssociationRowStatus { args } {}
    public method getTLiFilterAssociationLastChg { args } {}
    public method getTLiMacFilterParamsTableLastChg { args } {}
    public method getTLiMacFilterParamsRowStatus { args } {}
    public method setTLiMacFilterParamsRowStatus { args } {}
    public method getTLiMacFilterParamsLastChanged { args } {}
    public method getTLiMacFilterParamsDescription { args } {}
    public method setTLiMacFilterParamsDescription { args } {}
    public method getTLiMacFilterParamsFrameType { args } {}
    public method setTLiMacFilterParamsFrameType { args } {}
    public method getTLiMacFilterParamsSrcMAC { args } {}
    public method setTLiMacFilterParamsSrcMAC { args } {}
    public method getTLiMacFilterParamsSrcMACMask { args } {}
    public method setTLiMacFilterParamsSrcMACMask { args } {}
    public method getTLiMacFilterParamsDstMAC { args } {}
    public method setTLiMacFilterParamsDstMAC { args } {}
    public method getTLiMacFilterParamsDstMACMask { args } {}
    public method setTLiMacFilterParamsDstMACMask { args } {}
    public method getTLiMacFilterParamsIngrHitCount { args } {}
    public method getTLiMacFilterParamsEgrHitCount { args } {}
    public method getTLiMacFilterParamsIngrHitBytes { args } {}
    public method getTLiMacFilterParamsEgrHitBytes { args } {}
    public method getTLiIpFilterParamsTableLastChg { args } {}
    public method getTLiIpFilterParamsLastChanged { args } {}
    public method getTLiIpFilterParamsRowStatus { args } {}
    public method setTLiIpFilterParamsRowStatus { args } {}
    public method getTLiIpFilterParamsDescription { args } {}
    public method setTLiIpFilterParamsDescription { args } {}
    public method getTLiIpFilterParamsSrcIpAddrType { args } {}
    public method setTLiIpFilterParamsSrcIpAddrType { args } {}
    public method getTLiIpFilterParamsSrcIpAddr { args } {}
    public method setTLiIpFilterParamsSrcIpAddr { args } {}
    public method getTLiIpFilterParamsSrcIpFullMask { args } {}
    public method setTLiIpFilterParamsSrcIpFullMask { args } {}
    public method getTLiIpFilterParamsDstIpAddrType { args } {}
    public method setTLiIpFilterParamsDstIpAddrType { args } {}
    public method getTLiIpFilterParamsDstIpAddr { args } {}
    public method setTLiIpFilterParamsDstIpAddr { args } {}
    public method getTLiIpFilterParamsDstIpFullMask { args } {}
    public method setTLiIpFilterParamsDstIpFullMask { args } {}
    public method getTLiIpFilterParamsProtocolNextHdr { args } {}
    public method setTLiIpFilterParamsProtocolNextHdr { args } {}
    public method getTLiIpFilterParamsSrcPortValue1 { args } {}
    public method setTLiIpFilterParamsSrcPortValue1 { args } {}
    public method getTLiIpFilterParamsSrcPortValue2 { args } {}
    public method setTLiIpFilterParamsSrcPortValue2 { args } {}
    public method getTLiIpFilterParamsSrcPortOper { args } {}
    public method setTLiIpFilterParamsSrcPortOper { args } {}
    public method getTLiIpFilterParamsDstPortValue1 { args } {}
    public method setTLiIpFilterParamsDstPortValue1 { args } {}
    public method getTLiIpFilterParamsDstPortValue2 { args } {}
    public method setTLiIpFilterParamsDstPortValue2 { args } {}
    public method getTLiIpFilterParamsDstPortOper { args } {}
    public method setTLiIpFilterParamsDstPortOper { args } {}
    public method getTLiIpFltrParamsInfIngrHitCount { args } {}
    public method getTLiIpFltrParamsInfEgrHitCount { args } {}
    public method getTLiIpFltrParamsInfIngrHitBytes { args } {}
    public method getTLiIpFltrParamsInfEgrHitBytes { args } {}
    public method getTFilterPrefixListTableLstChng { args } {}
    public method getTFilterPrefixListRowStatus { args } {}
    public method setTFilterPrefixListRowStatus { args } {}
    public method getTFilterPrefixListLastChanged { args } {}
    public method getTFilterPrefixListDescription { args } {}
    public method setTFilterPrefixListDescription { args } {}
    public method getTFilterPrefixListEntryTblLstChg { args } {}
    public method getTFilterPrefixListEntryRowStatus { args } {}
    public method setTFilterPrefixListEntryRowStatus { args } {}
    public method getTFilterEmbeddedRefTableLstChg { args } {}
    public method getTFilterEmbeddedRefRowStatus { args } {}
    public method setTFilterEmbeddedRefRowStatus { args } {}
    public method getTFilterEmbeddedRefAdminState { args } {}
    public method setTFilterEmbeddedRefAdminState { args } {}
    public method getTFilterEmbeddedRefOperState { args } {}
    public method getTFilterPortListTableLstChng { args } {}
    public method getTFilterPortListRowStatus { args } {}
    public method setTFilterPortListRowStatus { args } {}
    public method getTFilterPortListLastChanged { args } {}
    public method getTFilterPortListDescription { args } {}
    public method setTFilterPortListDescription { args } {}
    public method getTFilterPortListEntryTblLstChg { args } {}
    public method getTFilterPortListEntryRowStatus { args } {}
    public method setTFilterPortListEntryRowStatus { args } {}
    public method getTFilterApplyPathTableLstChng { args } {}
    public method getTFilterApplyPathRowStatus { args } {}
    public method setTFilterApplyPathRowStatus { args } {}
    public method getTFilterApplyPathLastChanged { args } {}
    public method getTFilterApplyPathMatch1 { args } {}
    public method setTFilterApplyPathMatch1 { args } {}
    public method getTFilterApplyPathMatch2 { args } {}
    public method setTFilterApplyPathMatch2 { args } {}
    public method getTFltrEmbedRefInfEntryCnt { args } {}
    public method getTFltrEmbedRefInfEntryCntInsrtd { args } {}
    public method getTFltrEmbedEntryInsrtEntryId { args } {}
    public method getTFltrEmbedEntryRefOperState { args } {}
    public method getTIPv6FilterParamsExtTbleLstChgd { args } {}
    public method getTIPv6FilterParamsExtLastChanged { args } {}
    public method getTIPv6FilterParamsExtAhExtHdr { args } {}
    public method setTIPv6FilterParamsExtAhExtHdr { args } {}
    public method getTIPv6FilterParamsExtEspExtHdr { args } {}
    public method setTIPv6FilterParamsExtEspExtHdr { args } {}
    public method getTIPv6FilterParamsExtNatType { args } {}
    public method setTIPv6FilterParamsExtNatType { args } {}
    public method getTIPv6FilterParamsExtPktLenVal1 { args } {}
    public method setTIPv6FilterParamsExtPktLenVal1 { args } {}
    public method getTIPv6FilterParamsExtPktLenVal2 { args } {}
    public method setTIPv6FilterParamsExtPktLenVal2 { args } {}
    public method getTIPv6FilterParamsExtPktLenOper { args } {}
    public method setTIPv6FilterParamsExtPktLenOper { args } {}
    public method getTIPv6FilterParamsExtHopLimitVal1 { args } {}
    public method setTIPv6FilterParamsExtHopLimitVal1 { args } {}
    public method getTIPv6FilterParamsExtHopLimitVal2 { args } {}
    public method setTIPv6FilterParamsExtHopLimitVal2 { args } {}
    public method getTIPv6FilterParamsExtHopLimitOper { args } {}
    public method setTIPv6FilterParamsExtHopLimitOper { args } {}
    public method getTIPv6FilterParamsExtEgressPBR { args } {}
    public method setTIPv6FilterParamsExtEgressPBR { args } {}
    public method getTIPv6FilterParamsExtEsi { args } {}
    public method setTIPv6FilterParamsExtEsi { args } {}
    public method getTIPv6FilterParamsExtFwdEsiSvcId { args } {}
    public method setTIPv6FilterParamsExtFwdEsiSvcId { args } {}
    public method getTIPv6FilterParamsExtFwdEsiVRtrId { args } {}
    public method setTIPv6FilterParamsExtFwdEsiVRtrId { args } {}
    public method getTIPv6FilterParamsExtFwdEsiSFIp { args } {}
    public method setTIPv6FilterParamsExtFwdEsiSFIp { args } {}
    public method getTIPv6FilterParamsExtPbrDwnAction { args } {}
    public method setTIPv6FilterParamsExtPbrDwnAction { args } {}
    public method getTFilterEmbedOpenflowTableLstChg { args } {}
    public method getTFilterEmbedOpenflowRowStatus { args } {}
    public method setTFilterEmbedOpenflowRowStatus { args } {}
    public method getTFilterEmbedOpenflowAdminState { args } {}
    public method setTFilterEmbedOpenflowAdminState { args } {}
    public method getTFilterEmbedOpenflowOperState { args } {}
    public method getTFilterEmbedOflowSvcContext { args } {}
    public method setTFilterEmbedOflowSvcContext { args } {}
    public method getTFilterEmbedOflowSapContextPort { args } {}
    public method setTFilterEmbedOflowSapContextPort { args } {}
    public method getTFilterEmbedOflowSapContextEncap { args } {}
    public method setTFilterEmbedOflowSapContextEncap { args } {}
    public method getTFilterEmbedOflowContextType { args } {}
    public method setTFilterEmbedOflowContextType { args } {}
    public method getTFltrEmbedOfInfoEntryCnt { args } {}
    public method getTFltrEmbedOfInfoEntryCntInsrtd { args } {}
    public method getTFltrEmbedOfEntryInsrtEntryId { args } {}
    public method getTFltrEmbedOfEntryInsrtEntryState { args } {}
    public method getTIPFilterParamsExtTbleLstChgd { args } {}
    public method getTIPFilterParamsExtLastChanged { args } {}
    public method getTIPFilterParamsExtPktLenVal1 { args } {}
    public method setTIPFilterParamsExtPktLenVal1 { args } {}
    public method getTIPFilterParamsExtPktLenVal2 { args } {}
    public method setTIPFilterParamsExtPktLenVal2 { args } {}
    public method getTIPFilterParamsExtPktLenOper { args } {}
    public method setTIPFilterParamsExtPktLenOper { args } {}
    public method getTIPFilterParamsExtTTLVal1 { args } {}
    public method setTIPFilterParamsExtTTLVal1 { args } {}
    public method getTIPFilterParamsExtTTLVal2 { args } {}
    public method setTIPFilterParamsExtTTLVal2 { args } {}
    public method getTIPFilterParamsExtTTLOper { args } {}
    public method setTIPFilterParamsExtTTLOper { args } {}
    public method getTIPFilterParamsExtEgressPBR { args } {}
    public method setTIPFilterParamsExtEgressPBR { args } {}
    public method getTIPFilterParamsExtEsi { args } {}
    public method setTIPFilterParamsExtEsi { args } {}
    public method getTIPFilterParamsExtFwdEsiSvcId { args } {}
    public method setTIPFilterParamsExtFwdEsiSvcId { args } {}
    public method getTIPFilterParamsExtFwdEsiVRtrId { args } {}
    public method setTIPFilterParamsExtFwdEsiVRtrId { args } {}
    public method getTIPFilterParamsExtFwdEsiSFIp { args } {}
    public method setTIPFilterParamsExtFwdEsiSFIp { args } {}
    public method getTIPFilterParamsExtPbrDwnAction { args } {}
    public method setTIPFilterParamsExtPbrDwnAction { args } {}
    public method getTFilterRPlcyDstTableLastChg { args } {}
    public method getTFltrRPDstLastChanged { args } {}
    public method getTFltrRPDstRowStatus { args } {}
    public method setTFltrRPDstRowStatus { args } {}
    public method getTFltrRPDstAdminState { args } {}
    public method setTFltrRPDstAdminState { args } {}
    public method getTFltrRPDstOperState { args } {}
    public method getTFltrRPDstDescription { args } {}
    public method setTFltrRPDstDescription { args } {}
    public method getTFltrRPDstAdminPriority { args } {}
    public method setTFltrRPDstAdminPriority { args } {}
    public method getTFltrRPDstOperPriority { args } {}
    public method getTFilterRPlcySNMPTestTableLastChg { args } {}
    public method getTFltrRPSnmpTLastChanged { args } {}
    public method getTFltrRPSnmpTRowStatus { args } {}
    public method setTFltrRPSnmpTRowStatus { args } {}
    public method getTFltrRPSnmpTOID { args } {}
    public method setTFltrRPSnmpTOID { args } {}
    public method getTFltrRPSnmpTCommunity { args } {}
    public method setTFltrRPSnmpTCommunity { args } {}
    public method getTFltrRPSnmpTSnmpVersion { args } {}
    public method setTFltrRPSnmpTSnmpVersion { args } {}
    public method getTFltrRPSnmpTInterval { args } {}
    public method setTFltrRPSnmpTInterval { args } {}
    public method getTFltrRPSnmpTTimeout { args } {}
    public method setTFltrRPSnmpTTimeout { args } {}
    public method getTFltrRPSnmpTDropCount { args } {}
    public method setTFltrRPSnmpTDropCount { args } {}
    public method getTFltrRPSnmpTHoldDown { args } {}
    public method setTFltrRPSnmpTHoldDown { args } {}
    public method getTFltrRPSnmpTHoldDownRemain { args } {}
    public method getTFltrRPSnmpTLastActionTime { args } {}
    public method getTFltrRPSnmpTLastOID { args } {}
    public method getTFltrRPSnmpTLastType { args } {}
    public method getTFltrRPSnmpTLastCounter32Val { args } {}
    public method getTFltrRPSnmpTLastUnsigned32Val { args } {}
    public method getTFltrRPSnmpTLastTimeTicksVal { args } {}
    public method getTFltrRPSnmpTLastInt32Val { args } {}
    public method getTFltrRPSnmpTLastOctetStringVal { args } {}
    public method getTFltrRPSnmpTLastIpAddressVal { args } {}
    public method getTFltrRPSnmpTLastOidVal { args } {}
    public method getTFltrRPSnmpTLastCounter64Val { args } {}
    public method getTFltrRPSnmpTLastOpaqueVal { args } {}
    public method getTFltrRPSnmpTLastAction { args } {}
    public method getTFltrRPSnmpTLastPrioChange { args } {}
    public method getTFltrRPSnmpTNextRespIndex { args } {}
    public method getTFilterRPlcySNMPRespTableLastChg { args } {}
    public method getTFltrRPSnmpRspLastChanged { args } {}
    public method getTFltrRPSnmpRspRowStatus { args } {}
    public method setTFltrRPSnmpRspRowStatus { args } {}
    public method getTFltrRPSnmpRspAction { args } {}
    public method setTFltrRPSnmpRspAction { args } {}
    public method getTFltrRPSnmpRspPrioChange { args } {}
    public method setTFltrRPSnmpRspPrioChange { args } {}
    public method getTFltrRPSnmpRspOID { args } {}
    public method setTFltrRPSnmpRspOID { args } {}
    public method getTFltrRPSnmpRspType { args } {}
    public method setTFltrRPSnmpRspType { args } {}
    public method getTFltrRPSnmpRspCounter32Val { args } {}
    public method setTFltrRPSnmpRspCounter32Val { args } {}
    public method getTFltrRPSnmpRspUnsigned32Val { args } {}
    public method setTFltrRPSnmpRspUnsigned32Val { args } {}
    public method getTFltrRPSnmpRspTimeTicksVal { args } {}
    public method setTFltrRPSnmpRspTimeTicksVal { args } {}
    public method getTFltrRPSnmpRspInt32Val { args } {}
    public method setTFltrRPSnmpRspInt32Val { args } {}
    public method getTFltrRPSnmpRspOctetStringVal { args } {}
    public method setTFltrRPSnmpRspOctetStringVal { args } {}
    public method getTFltrRPSnmpRspIpAddressVal { args } {}
    public method setTFltrRPSnmpRspIpAddressVal { args } {}
    public method getTFltrRPSnmpRspOidVal { args } {}
    public method setTFltrRPSnmpRspOidVal { args } {}
    public method getTFltrRPSnmpRspCounter64Val { args } {}
    public method setTFltrRPSnmpRspCounter64Val { args } {}
    public method getTFltrRPSnmpRspOpaqueVal { args } {}
    public method setTFltrRPSnmpRspOpaqueVal { args } {}
    public method getTFilterRPlcyURLTestTableLastChg { args } {}
    public method getTFltrRPUrlTLastChanged { args } {}
    public method getTFltrRPUrlTRowStatus { args } {}
    public method setTFltrRPUrlTRowStatus { args } {}
    public method getTFltrRPUrlTUrl { args } {}
    public method setTFltrRPUrlTUrl { args } {}
    public method getTFltrRPUrlTHttpVersion { args } {}
    public method setTFltrRPUrlTHttpVersion { args } {}
    public method getTFltrRPUrlTInterval { args } {}
    public method setTFltrRPUrlTInterval { args } {}
    public method getTFltrRPUrlTTimeout { args } {}
    public method setTFltrRPUrlTTimeout { args } {}
    public method getTFltrRPUrlTDropCount { args } {}
    public method setTFltrRPUrlTDropCount { args } {}
    public method getTFltrRPUrlTHoldDown { args } {}
    public method setTFltrRPUrlTHoldDown { args } {}
    public method getTFltrRPUrlTHoldDownRemain { args } {}
    public method getTFltrRPUrlTLastActionTime { args } {}
    public method getTFltrRPUrlTLastRetCode { args } {}
    public method getTFltrRPUrlTLastAction { args } {}
    public method getTFltrRPUrlTLastPrioChange { args } {}
    public method getTFilterRPlcyURLRespTableLastChg { args } {}
    public method getTFltrRPUrlTRspLastChanged { args } {}
    public method getTFltrRPUrlTRspRowStatus { args } {}
    public method setTFltrRPUrlTRspRowStatus { args } {}
    public method getTFltrRPUrlTRspAction { args } {}
    public method setTFltrRPUrlTRspAction { args } {}
    public method getTFltrRPUrlTRspPrioChange { args } {}
    public method setTFltrRPUrlTRspPrioChange { args } {}
    public method getTFilterRPlcyPingTestTableLastChg { args } {}
    public method getTFltrRPPingTLastChanged { args } {}
    public method getTFltrRPPingTRowStatus { args } {}
    public method setTFltrRPPingTRowStatus { args } {}
    public method getTFltrRPPingTInterval { args } {}
    public method setTFltrRPPingTInterval { args } {}
    public method getTFltrRPPingTTimeout { args } {}
    public method setTFltrRPPingTTimeout { args } {}
    public method getTFltrRPPingTDropCount { args } {}
    public method setTFltrRPPingTDropCount { args } {}
    public method getTFltrRPPingTHoldDown { args } {}
    public method setTFltrRPPingTHoldDown { args } {}
    public method getTFltrRPPingTHoldDownRemain { args } {}
    public method getTFltrRPPingTLastActionTime { args } {}
    public method getTFltrRPPingTLastAction { args } {}
    public method getTFilterRPlcyUcastRtTTableLastChg { args } {}
    public method getTFltrRPUcastRtTLastChanged { args } {}
    public method getTFltrRPUcastRtTRowStatus { args } {}
    public method setTFltrRPUcastRtTRowStatus { args } {}
    public method getTFltrRPUcastRtTLastActionTime { args } {}
    public method getTFltrRPUcastRtTLastAction { args } {}
    public method getTFilterSystemFilterTableLastChg { args } {}
    public method getTFilterSystemFilterLastChanged { args } {}
    public method getTFilterSystemFilterRowStatus { args } {}
    public method setTFilterSystemFilterRowStatus { args } {}
    public method getTDhcp6FilterTblLastChanged { args } {}
    public method getTDhcp6FilterRowStatus { args } {}
    public method setTDhcp6FilterRowStatus { args } {}
    public method getTDhcp6FilterLastChanged { args } {}
    public method getTDhcp6FilterDescription { args } {}
    public method setTDhcp6FilterDescription { args } {}
    public method getTDhcp6FilterDefAction { args } {}
    public method setTDhcp6FilterDefAction { args } {}
    public method getTDhcp6FilterDefActionFlags { args } {}
    public method setTDhcp6FilterDefActionFlags { args } {}
    public method getTDhcp6FilterParamsTblLastChanged { args } {}
    public method getTDhcp6FilterParamsRowStatus { args } {}
    public method setTDhcp6FilterParamsRowStatus { args } {}
    public method getTDhcp6FilterParamsLastChanged { args } {}
    public method getTDhcp6FilterParamsOptionNumber { args } {}
    public method setTDhcp6FilterParamsOptionNumber { args } {}
    public method getTDhcp6FilterParamsOptionMatch { args } {}
    public method setTDhcp6FilterParamsOptionMatch { args } {}
    public method getTDhcp6FilterParamsAction { args } {}
    public method setTDhcp6FilterParamsAction { args } {}
    public method getTDhcp6FilterParamsOptionValue { args } {}
    public method setTDhcp6FilterParamsOptionValue { args } {}
    public method getTDhcp6FilterParamsActionFlags { args } {}
    public method setTDhcp6FilterParamsActionFlags { args } {}

}

itcl::body ::EsrFilter::getTIPFilterRowStatus { tIPFilterId args } {
    set var1 tIPFilterRowStatus
    set thisMethod ::EsrFilter::getTIPFilterRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterRowStatus { tIPFilterId value args } {
    set var1 tIPFilterRowStatus
    set thisMethod ::EsrFilter::setTIPFilterRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterScope { tIPFilterId args } {
    set var1 tIPFilterScope
    set thisMethod ::EsrFilter::getTIPFilterScope
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterScope { tIPFilterId value args } {
    set var1 tIPFilterScope
    set thisMethod ::EsrFilter::setTIPFilterScope
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterDescription { tIPFilterId args } {
    set var1 tIPFilterDescription
    set thisMethod ::EsrFilter::getTIPFilterDescription
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterDescription { tIPFilterId value args } {
    set var1 tIPFilterDescription
    set thisMethod ::EsrFilter::setTIPFilterDescription
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterDefaultAction { tIPFilterId args } {
    set var1 tIPFilterDefaultAction
    set thisMethod ::EsrFilter::getTIPFilterDefaultAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterDefaultAction { tIPFilterId value args } {
    set var1 tIPFilterDefaultAction
    set thisMethod ::EsrFilter::setTIPFilterDefaultAction
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterRadiusInsertPt { tIPFilterId args } {
    set var1 tIPFilterRadiusInsertPt
    set thisMethod ::EsrFilter::getTIPFilterRadiusInsertPt
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterRadiusInsertPt { tIPFilterId value args } {
    set var1 tIPFilterRadiusInsertPt
    set thisMethod ::EsrFilter::setTIPFilterRadiusInsertPt
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterRadiusInsertSize { tIPFilterId args } {
    set var1 tIPFilterRadiusInsertSize
    set thisMethod ::EsrFilter::getTIPFilterRadiusInsertSize
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterRadiusInsertSize { tIPFilterId value args } {
    set var1 tIPFilterRadiusInsertSize
    set thisMethod ::EsrFilter::setTIPFilterRadiusInsertSize
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterCreditCntrlInsertPt { tIPFilterId args } {
    set var1 tIPFilterCreditCntrlInsertPt
    set thisMethod ::EsrFilter::getTIPFilterCreditCntrlInsertPt
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterCreditCntrlInsertPt { tIPFilterId value args } {
    set var1 tIPFilterCreditCntrlInsertPt
    set thisMethod ::EsrFilter::setTIPFilterCreditCntrlInsertPt
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterCreditCntrlInsertSize { tIPFilterId args } {
    set var1 tIPFilterCreditCntrlInsertSize
    set thisMethod ::EsrFilter::getTIPFilterCreditCntrlInsertSize
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterCreditCntrlInsertSize { tIPFilterId value args } {
    set var1 tIPFilterCreditCntrlInsertSize
    set thisMethod ::EsrFilter::setTIPFilterCreditCntrlInsertSize
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterSubInsertHighWmark { tIPFilterId args } {
    set var1 tIPFilterSubInsertHighWmark
    set thisMethod ::EsrFilter::getTIPFilterSubInsertHighWmark
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterSubInsertHighWmark { tIPFilterId value args } {
    set var1 tIPFilterSubInsertHighWmark
    set thisMethod ::EsrFilter::setTIPFilterSubInsertHighWmark
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterSubInsertLowWmark { tIPFilterId args } {
    set var1 tIPFilterSubInsertLowWmark
    set thisMethod ::EsrFilter::getTIPFilterSubInsertLowWmark
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterSubInsertLowWmark { tIPFilterId value args } {
    set var1 tIPFilterSubInsertLowWmark
    set thisMethod ::EsrFilter::setTIPFilterSubInsertLowWmark
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIpFilterCreditCntrlNbrInsertd { tIPFilterId args } {
    set var1 tIpFilterCreditCntrlNbrInsertd
    set thisMethod ::EsrFilter::getTIpFilterCreditCntrlNbrInsertd
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIpFilterRadiusNbrInsertd { tIPFilterId args } {
    set var1 tIpFilterRadiusNbrInsertd
    set thisMethod ::EsrFilter::getTIpFilterRadiusNbrInsertd
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIpFilterName { tIPFilterId args } {
    set var1 tIpFilterName
    set thisMethod ::EsrFilter::getTIpFilterName
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIpFilterName { tIPFilterId value args } {
    set var1 tIpFilterName
    set thisMethod ::EsrFilter::setTIpFilterName
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterHostSharedInsertPt { tIPFilterId args } {
    set var1 tIPFilterHostSharedInsertPt
    set thisMethod ::EsrFilter::getTIPFilterHostSharedInsertPt
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterHostSharedInsertPt { tIPFilterId value args } {
    set var1 tIPFilterHostSharedInsertPt
    set thisMethod ::EsrFilter::setTIPFilterHostSharedInsertPt
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterHostSharedInsertSize { tIPFilterId args } {
    set var1 tIPFilterHostSharedInsertSize
    set thisMethod ::EsrFilter::getTIPFilterHostSharedInsertSize
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterHostSharedInsertSize { tIPFilterId value args } {
    set var1 tIPFilterHostSharedInsertSize
    set thisMethod ::EsrFilter::setTIPFilterHostSharedInsertSize
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIpFilterHostSharedNbrInsertd { tIPFilterId args } {
    set var1 tIpFilterHostSharedNbrInsertd
    set thisMethod ::EsrFilter::getTIpFilterHostSharedNbrInsertd
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterHostSharedHighWmark { tIPFilterId args } {
    set var1 tIPFilterHostSharedHighWmark
    set thisMethod ::EsrFilter::getTIPFilterHostSharedHighWmark
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterHostSharedHighWmark { tIPFilterId value args } {
    set var1 tIPFilterHostSharedHighWmark
    set thisMethod ::EsrFilter::setTIPFilterHostSharedHighWmark
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterHostSharedLowWmark { tIPFilterId args } {
    set var1 tIPFilterHostSharedLowWmark
    set thisMethod ::EsrFilter::getTIPFilterHostSharedLowWmark
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterHostSharedLowWmark { tIPFilterId value args } {
    set var1 tIPFilterHostSharedLowWmark
    set thisMethod ::EsrFilter::setTIPFilterHostSharedLowWmark
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterNbrHostSharedFltrs { tIPFilterId args } {
    set var1 tIPFilterNbrHostSharedFltrs
    set thisMethod ::EsrFilter::getTIPFilterNbrHostSharedFltrs
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterSharedPccRuleInsrtPt { tIPFilterId args } {
    set var1 tIPFilterSharedPccRuleInsrtPt
    set thisMethod ::EsrFilter::getTIPFilterSharedPccRuleInsrtPt
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterSharedPccRuleInsrtPt { tIPFilterId value args } {
    set var1 tIPFilterSharedPccRuleInsrtPt
    set thisMethod ::EsrFilter::setTIPFilterSharedPccRuleInsrtPt
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterSharedPccRuleInsrtSize { tIPFilterId args } {
    set var1 tIPFilterSharedPccRuleInsrtSize
    set thisMethod ::EsrFilter::getTIPFilterSharedPccRuleInsrtSize
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterSharedPccRuleInsrtSize { tIPFilterId value args } {
    set var1 tIPFilterSharedPccRuleInsrtSize
    set thisMethod ::EsrFilter::setTIPFilterSharedPccRuleInsrtSize
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterSharedPccRuleNbrInsrtd { tIPFilterId args } {
    set var1 tIPFilterSharedPccRuleNbrInsrtd
    set thisMethod ::EsrFilter::getTIPFilterSharedPccRuleNbrInsrtd
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterChainToSystemFilter { tIPFilterId args } {
    set var1 tIPFilterChainToSystemFilter
    set thisMethod ::EsrFilter::getTIPFilterChainToSystemFilter
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterChainToSystemFilter { tIPFilterId value args } {
    set var1 tIPFilterChainToSystemFilter
    set thisMethod ::EsrFilter::setTIPFilterChainToSystemFilter
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsRowStatus { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsRowStatus
    set thisMethod ::EsrFilter::getTIPFilterParamsRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsRowStatus { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsRowStatus
    set thisMethod ::EsrFilter::setTIPFilterParamsRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsLogId { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsLogId
    set thisMethod ::EsrFilter::getTIPFilterParamsLogId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsLogId { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsLogId
    set thisMethod ::EsrFilter::setTIPFilterParamsLogId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsDescription { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsDescription
    set thisMethod ::EsrFilter::getTIPFilterParamsDescription
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsDescription { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsDescription
    set thisMethod ::EsrFilter::setTIPFilterParamsDescription
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsAction { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsAction
    set thisMethod ::EsrFilter::getTIPFilterParamsAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsAction { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsAction
    set thisMethod ::EsrFilter::setTIPFilterParamsAction
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsForwardNH { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsForwardNH
    set thisMethod ::EsrFilter::getTIPFilterParamsForwardNH
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsForwardNH { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsForwardNH
    set thisMethod ::EsrFilter::setTIPFilterParamsForwardNH
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsForwardNHIndirect { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsForwardNHIndirect
    set thisMethod ::EsrFilter::getTIPFilterParamsForwardNHIndirect
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsForwardNHIndirect { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsForwardNHIndirect
    set thisMethod ::EsrFilter::setTIPFilterParamsForwardNHIndirect
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsRemarkDSCP { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsRemarkDSCP
    set thisMethod ::EsrFilter::getTIPFilterParamsRemarkDSCP
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsRemarkDSCP { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsRemarkDSCP
    set thisMethod ::EsrFilter::setTIPFilterParamsRemarkDSCP
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsRemarkDSCPMask { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsRemarkDSCPMask
    set thisMethod ::EsrFilter::getTIPFilterParamsRemarkDSCPMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsRemarkDSCPMask { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsRemarkDSCPMask
    set thisMethod ::EsrFilter::setTIPFilterParamsRemarkDSCPMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsRemarkDot1p { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsRemarkDot1p
    set thisMethod ::EsrFilter::getTIPFilterParamsRemarkDot1p
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsRemarkDot1p { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsRemarkDot1p
    set thisMethod ::EsrFilter::setTIPFilterParamsRemarkDot1p
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsSourceIpAddr { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsSourceIpAddr
    set thisMethod ::EsrFilter::getTIPFilterParamsSourceIpAddr
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsSourceIpAddr { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsSourceIpAddr
    set thisMethod ::EsrFilter::setTIPFilterParamsSourceIpAddr
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsSourceIpMask { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsSourceIpMask
    set thisMethod ::EsrFilter::getTIPFilterParamsSourceIpMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsSourceIpMask { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsSourceIpMask
    set thisMethod ::EsrFilter::setTIPFilterParamsSourceIpMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsDestinationIpAddr { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsDestinationIpAddr
    set thisMethod ::EsrFilter::getTIPFilterParamsDestinationIpAddr
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsDestinationIpAddr { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsDestinationIpAddr
    set thisMethod ::EsrFilter::setTIPFilterParamsDestinationIpAddr
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsDestinationIpMask { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsDestinationIpMask
    set thisMethod ::EsrFilter::getTIPFilterParamsDestinationIpMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsDestinationIpMask { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsDestinationIpMask
    set thisMethod ::EsrFilter::setTIPFilterParamsDestinationIpMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsProtocol { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsProtocol
    set thisMethod ::EsrFilter::getTIPFilterParamsProtocol
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsProtocol { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsProtocol
    set thisMethod ::EsrFilter::setTIPFilterParamsProtocol
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsSourcePortValue1 { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsSourcePortValue1
    set thisMethod ::EsrFilter::getTIPFilterParamsSourcePortValue1
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsSourcePortValue1 { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsSourcePortValue1
    set thisMethod ::EsrFilter::setTIPFilterParamsSourcePortValue1
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsSourcePortValue2 { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsSourcePortValue2
    set thisMethod ::EsrFilter::getTIPFilterParamsSourcePortValue2
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsSourcePortValue2 { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsSourcePortValue2
    set thisMethod ::EsrFilter::setTIPFilterParamsSourcePortValue2
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsSourcePortOperator { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsSourcePortOperator
    set thisMethod ::EsrFilter::getTIPFilterParamsSourcePortOperator
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsSourcePortOperator { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsSourcePortOperator
    set thisMethod ::EsrFilter::setTIPFilterParamsSourcePortOperator
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsDestPortValue1 { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsDestPortValue1
    set thisMethod ::EsrFilter::getTIPFilterParamsDestPortValue1
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsDestPortValue1 { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsDestPortValue1
    set thisMethod ::EsrFilter::setTIPFilterParamsDestPortValue1
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsDestPortValue2 { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsDestPortValue2
    set thisMethod ::EsrFilter::getTIPFilterParamsDestPortValue2
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsDestPortValue2 { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsDestPortValue2
    set thisMethod ::EsrFilter::setTIPFilterParamsDestPortValue2
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsDestPortOperator { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsDestPortOperator
    set thisMethod ::EsrFilter::getTIPFilterParamsDestPortOperator
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsDestPortOperator { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsDestPortOperator
    set thisMethod ::EsrFilter::setTIPFilterParamsDestPortOperator
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsDSCP { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsDSCP
    set thisMethod ::EsrFilter::getTIPFilterParamsDSCP
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsDSCP { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsDSCP
    set thisMethod ::EsrFilter::setTIPFilterParamsDSCP
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsFragment { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsFragment
    set thisMethod ::EsrFilter::getTIPFilterParamsFragment
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsFragment { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsFragment
    set thisMethod ::EsrFilter::setTIPFilterParamsFragment
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsOptionPresent { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsOptionPresent
    set thisMethod ::EsrFilter::getTIPFilterParamsOptionPresent
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsOptionPresent { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsOptionPresent
    set thisMethod ::EsrFilter::setTIPFilterParamsOptionPresent
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsIpOptionValue { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsIpOptionValue
    set thisMethod ::EsrFilter::getTIPFilterParamsIpOptionValue
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsIpOptionValue { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsIpOptionValue
    set thisMethod ::EsrFilter::setTIPFilterParamsIpOptionValue
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsIpOptionMask { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsIpOptionMask
    set thisMethod ::EsrFilter::getTIPFilterParamsIpOptionMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsIpOptionMask { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsIpOptionMask
    set thisMethod ::EsrFilter::setTIPFilterParamsIpOptionMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsMultipleOption { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsMultipleOption
    set thisMethod ::EsrFilter::getTIPFilterParamsMultipleOption
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsMultipleOption { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsMultipleOption
    set thisMethod ::EsrFilter::setTIPFilterParamsMultipleOption
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsTcpSyn { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsTcpSyn
    set thisMethod ::EsrFilter::getTIPFilterParamsTcpSyn
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsTcpSyn { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsTcpSyn
    set thisMethod ::EsrFilter::setTIPFilterParamsTcpSyn
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsTcpAck { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsTcpAck
    set thisMethod ::EsrFilter::getTIPFilterParamsTcpAck
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsTcpAck { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsTcpAck
    set thisMethod ::EsrFilter::setTIPFilterParamsTcpAck
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsIcmpCode { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsIcmpCode
    set thisMethod ::EsrFilter::getTIPFilterParamsIcmpCode
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsIcmpCode { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsIcmpCode
    set thisMethod ::EsrFilter::setTIPFilterParamsIcmpCode
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsIcmpType { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsIcmpType
    set thisMethod ::EsrFilter::getTIPFilterParamsIcmpType
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsIcmpType { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsIcmpType
    set thisMethod ::EsrFilter::setTIPFilterParamsIcmpType
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsCflowdSample { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsCflowdSample
    set thisMethod ::EsrFilter::getTIPFilterParamsCflowdSample
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsCflowdSample { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsCflowdSample
    set thisMethod ::EsrFilter::setTIPFilterParamsCflowdSample
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsCflowdIfSample { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsCflowdIfSample
    set thisMethod ::EsrFilter::getTIPFilterParamsCflowdIfSample
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsCflowdIfSample { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsCflowdIfSample
    set thisMethod ::EsrFilter::setTIPFilterParamsCflowdIfSample
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsForwardNHInterface { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsForwardNHInterface
    set thisMethod ::EsrFilter::getTIPFilterParamsForwardNHInterface
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsForwardNHInterface { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsForwardNHInterface
    set thisMethod ::EsrFilter::setTIPFilterParamsForwardNHInterface
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsIngressHitCount { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsIngressHitCount
    set thisMethod ::EsrFilter::getTIPFilterParamsIngressHitCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsEgressHitCount { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsEgressHitCount
    set thisMethod ::EsrFilter::getTIPFilterParamsEgressHitCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsLogInstantiated { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsLogInstantiated
    set thisMethod ::EsrFilter::getTIPFilterParamsLogInstantiated
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsForwardRedPlcy { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsForwardRedPlcy
    set thisMethod ::EsrFilter::getTIPFilterParamsForwardRedPlcy
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsForwardRedPlcy { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsForwardRedPlcy
    set thisMethod ::EsrFilter::setTIPFilterParamsForwardRedPlcy
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsActiveDest { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsActiveDest
    set thisMethod ::EsrFilter::getTIPFilterParamsActiveDest
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsFwdSvcId { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsFwdSvcId
    set thisMethod ::EsrFilter::getTIPFilterParamsFwdSvcId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsFwdSapPortId { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsFwdSapPortId
    set thisMethod ::EsrFilter::getTIPFilterParamsFwdSapPortId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsFwdSapPortId { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsFwdSapPortId
    set thisMethod ::EsrFilter::setTIPFilterParamsFwdSapPortId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsFwdSapEncapVal { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsFwdSapEncapVal
    set thisMethod ::EsrFilter::getTIPFilterParamsFwdSapEncapVal
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsFwdSapEncapVal { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsFwdSapEncapVal
    set thisMethod ::EsrFilter::setTIPFilterParamsFwdSapEncapVal
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsFwdSdpBind { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsFwdSdpBind
    set thisMethod ::EsrFilter::getTIPFilterParamsFwdSdpBind
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsFwdSdpBind { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsFwdSdpBind
    set thisMethod ::EsrFilter::setTIPFilterParamsFwdSdpBind
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsTimeRangeName { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsTimeRangeName
    set thisMethod ::EsrFilter::getTIPFilterParamsTimeRangeName
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsTimeRangeName { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsTimeRangeName
    set thisMethod ::EsrFilter::setTIPFilterParamsTimeRangeName
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsTimeRangeState { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsTimeRangeState
    set thisMethod ::EsrFilter::getTIPFilterParamsTimeRangeState
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsRedirectURL { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsRedirectURL
    set thisMethod ::EsrFilter::getTIPFilterParamsRedirectURL
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsRedirectURL { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsRedirectURL
    set thisMethod ::EsrFilter::setTIPFilterParamsRedirectURL
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsSrcIpFullMask { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsSrcIpFullMask
    set thisMethod ::EsrFilter::getTIPFilterParamsSrcIpFullMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsSrcIpFullMask { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsSrcIpFullMask
    set thisMethod ::EsrFilter::setTIPFilterParamsSrcIpFullMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsDestIpFullMask { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsDestIpFullMask
    set thisMethod ::EsrFilter::getTIPFilterParamsDestIpFullMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsDestIpFullMask { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsDestIpFullMask
    set thisMethod ::EsrFilter::setTIPFilterParamsDestIpFullMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsIngrHitByteCount { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsIngrHitByteCount
    set thisMethod ::EsrFilter::getTIPFilterParamsIngrHitByteCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsEgrHitByteCount { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsEgrHitByteCount
    set thisMethod ::EsrFilter::getTIPFilterParamsEgrHitByteCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsFwdRtrId { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsFwdRtrId
    set thisMethod ::EsrFilter::getTIPFilterParamsFwdRtrId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsFwdRtrId { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsFwdRtrId
    set thisMethod ::EsrFilter::setTIPFilterParamsFwdRtrId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsSrcRouteOption { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsSrcRouteOption
    set thisMethod ::EsrFilter::getTIPFilterParamsSrcRouteOption
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsSrcRouteOption { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsSrcRouteOption
    set thisMethod ::EsrFilter::setTIPFilterParamsSrcRouteOption
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsSrcIpPrefixList { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsSrcIpPrefixList
    set thisMethod ::EsrFilter::getTIPFilterParamsSrcIpPrefixList
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsSrcIpPrefixList { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsSrcIpPrefixList
    set thisMethod ::EsrFilter::setTIPFilterParamsSrcIpPrefixList
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsDstIpPrefixList { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsDstIpPrefixList
    set thisMethod ::EsrFilter::getTIPFilterParamsDstIpPrefixList
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsDstIpPrefixList { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsDstIpPrefixList
    set thisMethod ::EsrFilter::setTIPFilterParamsDstIpPrefixList
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsPortSelector { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsPortSelector
    set thisMethod ::EsrFilter::getTIPFilterParamsPortSelector
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsPortSelector { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsPortSelector
    set thisMethod ::EsrFilter::setTIPFilterParamsPortSelector
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsSrcPortList { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsSrcPortList
    set thisMethod ::EsrFilter::getTIPFilterParamsSrcPortList
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsSrcPortList { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsSrcPortList
    set thisMethod ::EsrFilter::setTIPFilterParamsSrcPortList
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsDstPortList { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsDstPortList
    set thisMethod ::EsrFilter::getTIPFilterParamsDstPortList
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsDstPortList { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsDstPortList
    set thisMethod ::EsrFilter::setTIPFilterParamsDstPortList
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsRdirAllwRadOvrd { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsRdirAllwRadOvrd
    set thisMethod ::EsrFilter::getTIPFilterParamsRdirAllwRadOvrd
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsRdirAllwRadOvrd { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsRdirAllwRadOvrd
    set thisMethod ::EsrFilter::setTIPFilterParamsRdirAllwRadOvrd
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsNatPolicyName { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsNatPolicyName
    set thisMethod ::EsrFilter::getTIPFilterParamsNatPolicyName
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsNatPolicyName { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsNatPolicyName
    set thisMethod ::EsrFilter::setTIPFilterParamsNatPolicyName
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsFwdLsp { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsFwdLsp
    set thisMethod ::EsrFilter::getTIPFilterParamsFwdLsp
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsFwdLsp { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsFwdLsp
    set thisMethod ::EsrFilter::setTIPFilterParamsFwdLsp
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsFwdLspRtrId { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsFwdLspRtrId
    set thisMethod ::EsrFilter::getTIPFilterParamsFwdLspRtrId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsFwdLspRtrId { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsFwdLspRtrId
    set thisMethod ::EsrFilter::setTIPFilterParamsFwdLspRtrId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterRowStatus { tMacFilterId args } {
    set var1 tMacFilterRowStatus
    set thisMethod ::EsrFilter::getTMacFilterRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterRowStatus { tMacFilterId value args } {
    set var1 tMacFilterRowStatus
    set thisMethod ::EsrFilter::setTMacFilterRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterScope { tMacFilterId args } {
    set var1 tMacFilterScope
    set thisMethod ::EsrFilter::getTMacFilterScope
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterScope { tMacFilterId value args } {
    set var1 tMacFilterScope
    set thisMethod ::EsrFilter::setTMacFilterScope
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterDescription { tMacFilterId args } {
    set var1 tMacFilterDescription
    set thisMethod ::EsrFilter::getTMacFilterDescription
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterDescription { tMacFilterId value args } {
    set var1 tMacFilterDescription
    set thisMethod ::EsrFilter::setTMacFilterDescription
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterDefaultAction { tMacFilterId args } {
    set var1 tMacFilterDefaultAction
    set thisMethod ::EsrFilter::getTMacFilterDefaultAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterDefaultAction { tMacFilterId value args } {
    set var1 tMacFilterDefaultAction
    set thisMethod ::EsrFilter::setTMacFilterDefaultAction
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterType { tMacFilterId args } {
    set var1 tMacFilterType
    set thisMethod ::EsrFilter::getTMacFilterType
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterType { tMacFilterId value args } {
    set var1 tMacFilterType
    set thisMethod ::EsrFilter::setTMacFilterType
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterName { tMacFilterId args } {
    set var1 tMacFilterName
    set thisMethod ::EsrFilter::getTMacFilterName
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterName { tMacFilterId value args } {
    set var1 tMacFilterName
    set thisMethod ::EsrFilter::setTMacFilterName
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsRowStatus { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsRowStatus
    set thisMethod ::EsrFilter::getTMacFilterParamsRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsRowStatus { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsRowStatus
    set thisMethod ::EsrFilter::setTMacFilterParamsRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsLogId { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsLogId
    set thisMethod ::EsrFilter::getTMacFilterParamsLogId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsLogId { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsLogId
    set thisMethod ::EsrFilter::setTMacFilterParamsLogId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsDescription { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsDescription
    set thisMethod ::EsrFilter::getTMacFilterParamsDescription
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsDescription { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsDescription
    set thisMethod ::EsrFilter::setTMacFilterParamsDescription
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsAction { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsAction
    set thisMethod ::EsrFilter::getTMacFilterParamsAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsAction { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsAction
    set thisMethod ::EsrFilter::setTMacFilterParamsAction
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsFrameType { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsFrameType
    set thisMethod ::EsrFilter::getTMacFilterParamsFrameType
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsFrameType { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsFrameType
    set thisMethod ::EsrFilter::setTMacFilterParamsFrameType
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsSrcMAC { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsSrcMAC
    set thisMethod ::EsrFilter::getTMacFilterParamsSrcMAC
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsSrcMAC { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsSrcMAC
    set thisMethod ::EsrFilter::setTMacFilterParamsSrcMAC
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsSrcMACMask { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsSrcMACMask
    set thisMethod ::EsrFilter::getTMacFilterParamsSrcMACMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsSrcMACMask { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsSrcMACMask
    set thisMethod ::EsrFilter::setTMacFilterParamsSrcMACMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsDstMAC { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsDstMAC
    set thisMethod ::EsrFilter::getTMacFilterParamsDstMAC
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsDstMAC { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsDstMAC
    set thisMethod ::EsrFilter::setTMacFilterParamsDstMAC
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsDstMACMask { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsDstMACMask
    set thisMethod ::EsrFilter::getTMacFilterParamsDstMACMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsDstMACMask { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsDstMACMask
    set thisMethod ::EsrFilter::setTMacFilterParamsDstMACMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsDot1pValue { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsDot1pValue
    set thisMethod ::EsrFilter::getTMacFilterParamsDot1pValue
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsDot1pValue { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsDot1pValue
    set thisMethod ::EsrFilter::setTMacFilterParamsDot1pValue
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsDot1pMask { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsDot1pMask
    set thisMethod ::EsrFilter::getTMacFilterParamsDot1pMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsDot1pMask { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsDot1pMask
    set thisMethod ::EsrFilter::setTMacFilterParamsDot1pMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsEtherType { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsEtherType
    set thisMethod ::EsrFilter::getTMacFilterParamsEtherType
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsEtherType { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsEtherType
    set thisMethod ::EsrFilter::setTMacFilterParamsEtherType
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsDsap { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsDsap
    set thisMethod ::EsrFilter::getTMacFilterParamsDsap
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsDsap { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsDsap
    set thisMethod ::EsrFilter::setTMacFilterParamsDsap
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsDsapMask { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsDsapMask
    set thisMethod ::EsrFilter::getTMacFilterParamsDsapMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsDsapMask { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsDsapMask
    set thisMethod ::EsrFilter::setTMacFilterParamsDsapMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsSsap { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsSsap
    set thisMethod ::EsrFilter::getTMacFilterParamsSsap
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsSsap { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsSsap
    set thisMethod ::EsrFilter::setTMacFilterParamsSsap
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsSsapMask { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsSsapMask
    set thisMethod ::EsrFilter::getTMacFilterParamsSsapMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsSsapMask { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsSsapMask
    set thisMethod ::EsrFilter::setTMacFilterParamsSsapMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsSnapPid { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsSnapPid
    set thisMethod ::EsrFilter::getTMacFilterParamsSnapPid
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsSnapPid { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsSnapPid
    set thisMethod ::EsrFilter::setTMacFilterParamsSnapPid
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsSnapOui { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsSnapOui
    set thisMethod ::EsrFilter::getTMacFilterParamsSnapOui
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsSnapOui { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsSnapOui
    set thisMethod ::EsrFilter::setTMacFilterParamsSnapOui
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsIngressHitCount { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsIngressHitCount
    set thisMethod ::EsrFilter::getTMacFilterParamsIngressHitCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsEgressHitCount { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsEgressHitCount
    set thisMethod ::EsrFilter::getTMacFilterParamsEgressHitCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsLogInstantiated { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsLogInstantiated
    set thisMethod ::EsrFilter::getTMacFilterParamsLogInstantiated
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsFwdSvcId { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsFwdSvcId
    set thisMethod ::EsrFilter::getTMacFilterParamsFwdSvcId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsFwdSapPortId { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsFwdSapPortId
    set thisMethod ::EsrFilter::getTMacFilterParamsFwdSapPortId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsFwdSapPortId { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsFwdSapPortId
    set thisMethod ::EsrFilter::setTMacFilterParamsFwdSapPortId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsFwdSapEncapVal { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsFwdSapEncapVal
    set thisMethod ::EsrFilter::getTMacFilterParamsFwdSapEncapVal
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsFwdSapEncapVal { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsFwdSapEncapVal
    set thisMethod ::EsrFilter::setTMacFilterParamsFwdSapEncapVal
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsFwdSdpBind { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsFwdSdpBind
    set thisMethod ::EsrFilter::getTMacFilterParamsFwdSdpBind
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsFwdSdpBind { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsFwdSdpBind
    set thisMethod ::EsrFilter::setTMacFilterParamsFwdSdpBind
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsTimeRangeName { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsTimeRangeName
    set thisMethod ::EsrFilter::getTMacFilterParamsTimeRangeName
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsTimeRangeName { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsTimeRangeName
    set thisMethod ::EsrFilter::setTMacFilterParamsTimeRangeName
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsTimeRangeState { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsTimeRangeState
    set thisMethod ::EsrFilter::getTMacFilterParamsTimeRangeState
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsRedirectURL { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsRedirectURL
    set thisMethod ::EsrFilter::getTMacFilterParamsRedirectURL
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsRedirectURL { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsRedirectURL
    set thisMethod ::EsrFilter::setTMacFilterParamsRedirectURL
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsIngrHitByteCount { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsIngrHitByteCount
    set thisMethod ::EsrFilter::getTMacFilterParamsIngrHitByteCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsEgrHitByteCount { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsEgrHitByteCount
    set thisMethod ::EsrFilter::getTMacFilterParamsEgrHitByteCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsLowISID { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsLowISID
    set thisMethod ::EsrFilter::getTMacFilterParamsLowISID
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsLowISID { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsLowISID
    set thisMethod ::EsrFilter::setTMacFilterParamsLowISID
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsHighISID { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsHighISID
    set thisMethod ::EsrFilter::getTMacFilterParamsHighISID
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsHighISID { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsHighISID
    set thisMethod ::EsrFilter::setTMacFilterParamsHighISID
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsInnerTagValue { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsInnerTagValue
    set thisMethod ::EsrFilter::getTMacFilterParamsInnerTagValue
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsInnerTagValue { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsInnerTagValue
    set thisMethod ::EsrFilter::setTMacFilterParamsInnerTagValue
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsInnerTagMask { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsInnerTagMask
    set thisMethod ::EsrFilter::getTMacFilterParamsInnerTagMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsInnerTagMask { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsInnerTagMask
    set thisMethod ::EsrFilter::setTMacFilterParamsInnerTagMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsOuterTagValue { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsOuterTagValue
    set thisMethod ::EsrFilter::getTMacFilterParamsOuterTagValue
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsOuterTagValue { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsOuterTagValue
    set thisMethod ::EsrFilter::setTMacFilterParamsOuterTagValue
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsOuterTagMask { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsOuterTagMask
    set thisMethod ::EsrFilter::getTMacFilterParamsOuterTagMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsOuterTagMask { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsOuterTagMask
    set thisMethod ::EsrFilter::setTMacFilterParamsOuterTagMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsEsi { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsEsi
    set thisMethod ::EsrFilter::getTMacFilterParamsEsi
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsEsi { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsEsi
    set thisMethod ::EsrFilter::setTMacFilterParamsEsi
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsFwdEsiSvcId { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsFwdEsiSvcId
    set thisMethod ::EsrFilter::getTMacFilterParamsFwdEsiSvcId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsFwdEsiSvcId { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsFwdEsiSvcId
    set thisMethod ::EsrFilter::setTMacFilterParamsFwdEsiSvcId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterParamsPbrDwnAction { tMacFilterId tMacFilterParamsIndex args } {
    set var1 tMacFilterParamsPbrDwnAction
    set thisMethod ::EsrFilter::getTMacFilterParamsPbrDwnAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTMacFilterParamsPbrDwnAction { tMacFilterId tMacFilterParamsIndex value args } {
    set var1 tMacFilterParamsPbrDwnAction
    set thisMethod ::EsrFilter::setTMacFilterParamsPbrDwnAction
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tMacFilterId $tMacFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterLogRowStatus { tFilterLogId args } {
    set var1 tFilterLogRowStatus
    set thisMethod ::EsrFilter::getTFilterLogRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterLogId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterLogRowStatus { tFilterLogId value args } {
    set var1 tFilterLogRowStatus
    set thisMethod ::EsrFilter::setTFilterLogRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterLogId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterLogDestination { tFilterLogId args } {
    set var1 tFilterLogDestination
    set thisMethod ::EsrFilter::getTFilterLogDestination
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterLogId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterLogDestination { tFilterLogId value args } {
    set var1 tFilterLogDestination
    set thisMethod ::EsrFilter::setTFilterLogDestination
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterLogId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterLogDescription { tFilterLogId args } {
    set var1 tFilterLogDescription
    set thisMethod ::EsrFilter::getTFilterLogDescription
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterLogId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterLogDescription { tFilterLogId value args } {
    set var1 tFilterLogDescription
    set thisMethod ::EsrFilter::setTFilterLogDescription
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterLogId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterLogMaxNumEntries { tFilterLogId args } {
    set var1 tFilterLogMaxNumEntries
    set thisMethod ::EsrFilter::getTFilterLogMaxNumEntries
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterLogId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterLogMaxNumEntries { tFilterLogId value args } {
    set var1 tFilterLogMaxNumEntries
    set thisMethod ::EsrFilter::setTFilterLogMaxNumEntries
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterLogId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterLogSysLogId { tFilterLogId args } {
    set var1 tFilterLogSysLogId
    set thisMethod ::EsrFilter::getTFilterLogSysLogId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterLogId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterLogSysLogId { tFilterLogId value args } {
    set var1 tFilterLogSysLogId
    set thisMethod ::EsrFilter::setTFilterLogSysLogId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterLogId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterLogFileId { tFilterLogId args } {
    set var1 tFilterLogFileId
    set thisMethod ::EsrFilter::getTFilterLogFileId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterLogId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterLogFileId { tFilterLogId value args } {
    set var1 tFilterLogFileId
    set thisMethod ::EsrFilter::setTFilterLogFileId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterLogId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterLogStopOnFull { tFilterLogId args } {
    set var1 tFilterLogStopOnFull
    set thisMethod ::EsrFilter::getTFilterLogStopOnFull
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterLogId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterLogStopOnFull { tFilterLogId value args } {
    set var1 tFilterLogStopOnFull
    set thisMethod ::EsrFilter::setTFilterLogStopOnFull
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterLogId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterLogEnabled { tFilterLogId args } {
    set var1 tFilterLogEnabled
    set thisMethod ::EsrFilter::getTFilterLogEnabled
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterLogId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterLogEnabled { tFilterLogId value args } {
    set var1 tFilterLogEnabled
    set thisMethod ::EsrFilter::setTFilterLogEnabled
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterLogId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterLogSummaryEnabled { tFilterLogId args } {
    set var1 tFilterLogSummaryEnabled
    set thisMethod ::EsrFilter::getTFilterLogSummaryEnabled
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterLogId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterLogSummaryEnabled { tFilterLogId value args } {
    set var1 tFilterLogSummaryEnabled
    set thisMethod ::EsrFilter::setTFilterLogSummaryEnabled
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterLogId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterLogSummaryCrit1 { tFilterLogId args } {
    set var1 tFilterLogSummaryCrit1
    set thisMethod ::EsrFilter::getTFilterLogSummaryCrit1
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterLogId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterLogSummaryCrit1 { tFilterLogId value args } {
    set var1 tFilterLogSummaryCrit1
    set thisMethod ::EsrFilter::setTFilterLogSummaryCrit1
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterLogId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterLogMaxInstances { args } {
    set var1 tFilterLogMaxInstances
    set thisMethod ::EsrFilter::getTFilterLogMaxInstances
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterLogInstances { args } {
    set var1 tFilterLogInstances
    set thisMethod ::EsrFilter::getTFilterLogInstances
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterLogBindings { args } {
    set var1 tFilterLogBindings
    set thisMethod ::EsrFilter::getTFilterLogBindings
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterDomainLastChanged { args } {
    set var1 tFilterDomainLastChanged
    set thisMethod ::EsrFilter::getTFilterDomainLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterRPRowStatus { tFilterRedirectPolicy args } {
    set var1 tFilterRPRowStatus
    set thisMethod ::EsrFilter::getTFilterRPRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterRPRowStatus { tFilterRedirectPolicy value args } {
    set var1 tFilterRPRowStatus
    set thisMethod ::EsrFilter::setTFilterRPRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterRPDescription { tFilterRedirectPolicy args } {
    set var1 tFilterRPDescription
    set thisMethod ::EsrFilter::getTFilterRPDescription
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterRPDescription { tFilterRedirectPolicy value args } {
    set var1 tFilterRPDescription
    set thisMethod ::EsrFilter::setTFilterRPDescription
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterRPAdminState { tFilterRedirectPolicy args } {
    set var1 tFilterRPAdminState
    set thisMethod ::EsrFilter::getTFilterRPAdminState
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterRPAdminState { tFilterRedirectPolicy value args } {
    set var1 tFilterRPAdminState
    set thisMethod ::EsrFilter::setTFilterRPAdminState
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterRPVrtrId { tFilterRedirectPolicy args } {
    set var1 tFilterRPVrtrId
    set thisMethod ::EsrFilter::getTFilterRPVrtrId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterRPVrtrId { tFilterRedirectPolicy value args } {
    set var1 tFilterRPVrtrId
    set thisMethod ::EsrFilter::setTFilterRPVrtrId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterRPActiveDestAddrType { tFilterRedirectPolicy args } {
    set var1 tFilterRPActiveDestAddrType
    set thisMethod ::EsrFilter::getTFilterRPActiveDestAddrType
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterRPActiveDestAddr { tFilterRedirectPolicy args } {
    set var1 tFilterRPActiveDestAddr
    set thisMethod ::EsrFilter::getTFilterRPActiveDestAddr
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterRPDstStickiness { tFilterRedirectPolicy args } {
    set var1 tFilterRPDstStickiness
    set thisMethod ::EsrFilter::getTFilterRPDstStickiness
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterRPDstStickiness { tFilterRedirectPolicy value args } {
    set var1 tFilterRPDstStickiness
    set thisMethod ::EsrFilter::setTFilterRPDstStickiness
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterRowStatus { tIPv6FilterId args } {
    set var1 tIPv6FilterRowStatus
    set thisMethod ::EsrFilter::getTIPv6FilterRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterRowStatus { tIPv6FilterId value args } {
    set var1 tIPv6FilterRowStatus
    set thisMethod ::EsrFilter::setTIPv6FilterRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterScope { tIPv6FilterId args } {
    set var1 tIPv6FilterScope
    set thisMethod ::EsrFilter::getTIPv6FilterScope
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterScope { tIPv6FilterId value args } {
    set var1 tIPv6FilterScope
    set thisMethod ::EsrFilter::setTIPv6FilterScope
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterDescription { tIPv6FilterId args } {
    set var1 tIPv6FilterDescription
    set thisMethod ::EsrFilter::getTIPv6FilterDescription
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterDescription { tIPv6FilterId value args } {
    set var1 tIPv6FilterDescription
    set thisMethod ::EsrFilter::setTIPv6FilterDescription
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterDefaultAction { tIPv6FilterId args } {
    set var1 tIPv6FilterDefaultAction
    set thisMethod ::EsrFilter::getTIPv6FilterDefaultAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterDefaultAction { tIPv6FilterId value args } {
    set var1 tIPv6FilterDefaultAction
    set thisMethod ::EsrFilter::setTIPv6FilterDefaultAction
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterRadiusInsertPt { tIPv6FilterId args } {
    set var1 tIPv6FilterRadiusInsertPt
    set thisMethod ::EsrFilter::getTIPv6FilterRadiusInsertPt
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterRadiusInsertPt { tIPv6FilterId value args } {
    set var1 tIPv6FilterRadiusInsertPt
    set thisMethod ::EsrFilter::setTIPv6FilterRadiusInsertPt
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterRadiusInsertSize { tIPv6FilterId args } {
    set var1 tIPv6FilterRadiusInsertSize
    set thisMethod ::EsrFilter::getTIPv6FilterRadiusInsertSize
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterRadiusInsertSize { tIPv6FilterId value args } {
    set var1 tIPv6FilterRadiusInsertSize
    set thisMethod ::EsrFilter::setTIPv6FilterRadiusInsertSize
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterCreditCntrlInsertPt { tIPv6FilterId args } {
    set var1 tIPv6FilterCreditCntrlInsertPt
    set thisMethod ::EsrFilter::getTIPv6FilterCreditCntrlInsertPt
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterCreditCntrlInsertPt { tIPv6FilterId value args } {
    set var1 tIPv6FilterCreditCntrlInsertPt
    set thisMethod ::EsrFilter::setTIPv6FilterCreditCntrlInsertPt
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterCreditCntrlInsertSize { tIPv6FilterId args } {
    set var1 tIPv6FilterCreditCntrlInsertSize
    set thisMethod ::EsrFilter::getTIPv6FilterCreditCntrlInsertSize
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterCreditCntrlInsertSize { tIPv6FilterId value args } {
    set var1 tIPv6FilterCreditCntrlInsertSize
    set thisMethod ::EsrFilter::setTIPv6FilterCreditCntrlInsertSize
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterSubInsertHighWmark { tIPv6FilterId args } {
    set var1 tIPv6FilterSubInsertHighWmark
    set thisMethod ::EsrFilter::getTIPv6FilterSubInsertHighWmark
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterSubInsertHighWmark { tIPv6FilterId value args } {
    set var1 tIPv6FilterSubInsertHighWmark
    set thisMethod ::EsrFilter::setTIPv6FilterSubInsertHighWmark
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterSubInsertLowWmark { tIPv6FilterId args } {
    set var1 tIPv6FilterSubInsertLowWmark
    set thisMethod ::EsrFilter::getTIPv6FilterSubInsertLowWmark
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterSubInsertLowWmark { tIPv6FilterId value args } {
    set var1 tIPv6FilterSubInsertLowWmark
    set thisMethod ::EsrFilter::setTIPv6FilterSubInsertLowWmark
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIpv6FilterCreditCntrlNbrInsertd { tIPv6FilterId args } {
    set var1 tIpv6FilterCreditCntrlNbrInsertd
    set thisMethod ::EsrFilter::getTIpv6FilterCreditCntrlNbrInsertd
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIpv6FilterRadiusNbrInsertd { tIPv6FilterId args } {
    set var1 tIpv6FilterRadiusNbrInsertd
    set thisMethod ::EsrFilter::getTIpv6FilterRadiusNbrInsertd
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIpv6FilterName { tIPv6FilterId args } {
    set var1 tIpv6FilterName
    set thisMethod ::EsrFilter::getTIpv6FilterName
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIpv6FilterName { tIPv6FilterId value args } {
    set var1 tIpv6FilterName
    set thisMethod ::EsrFilter::setTIpv6FilterName
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterHostSharedInsertPt { tIPv6FilterId args } {
    set var1 tIPv6FilterHostSharedInsertPt
    set thisMethod ::EsrFilter::getTIPv6FilterHostSharedInsertPt
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterHostSharedInsertPt { tIPv6FilterId value args } {
    set var1 tIPv6FilterHostSharedInsertPt
    set thisMethod ::EsrFilter::setTIPv6FilterHostSharedInsertPt
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterHostSharedInsertSize { tIPv6FilterId args } {
    set var1 tIPv6FilterHostSharedInsertSize
    set thisMethod ::EsrFilter::getTIPv6FilterHostSharedInsertSize
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterHostSharedInsertSize { tIPv6FilterId value args } {
    set var1 tIPv6FilterHostSharedInsertSize
    set thisMethod ::EsrFilter::setTIPv6FilterHostSharedInsertSize
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIpv6FilterHostSharedNbrInsertd { tIPv6FilterId args } {
    set var1 tIpv6FilterHostSharedNbrInsertd
    set thisMethod ::EsrFilter::getTIpv6FilterHostSharedNbrInsertd
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterHostSharedHighWmark { tIPv6FilterId args } {
    set var1 tIPv6FilterHostSharedHighWmark
    set thisMethod ::EsrFilter::getTIPv6FilterHostSharedHighWmark
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterHostSharedHighWmark { tIPv6FilterId value args } {
    set var1 tIPv6FilterHostSharedHighWmark
    set thisMethod ::EsrFilter::setTIPv6FilterHostSharedHighWmark
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterHostSharedLowWmark { tIPv6FilterId args } {
    set var1 tIPv6FilterHostSharedLowWmark
    set thisMethod ::EsrFilter::getTIPv6FilterHostSharedLowWmark
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterHostSharedLowWmark { tIPv6FilterId value args } {
    set var1 tIPv6FilterHostSharedLowWmark
    set thisMethod ::EsrFilter::setTIPv6FilterHostSharedLowWmark
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterNbrHostSharedFltrs { tIPv6FilterId args } {
    set var1 tIPv6FilterNbrHostSharedFltrs
    set thisMethod ::EsrFilter::getTIPv6FilterNbrHostSharedFltrs
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterSharedPccRuleInsrtPt { tIPv6FilterId args } {
    set var1 tIPv6FilterSharedPccRuleInsrtPt
    set thisMethod ::EsrFilter::getTIPv6FilterSharedPccRuleInsrtPt
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterSharedPccRuleInsrtPt { tIPv6FilterId value args } {
    set var1 tIPv6FilterSharedPccRuleInsrtPt
    set thisMethod ::EsrFilter::setTIPv6FilterSharedPccRuleInsrtPt
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterSharedPccRuleInsrtSiz { tIPv6FilterId args } {
    set var1 tIPv6FilterSharedPccRuleInsrtSiz
    set thisMethod ::EsrFilter::getTIPv6FilterSharedPccRuleInsrtSiz
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterSharedPccRuleInsrtSiz { tIPv6FilterId value args } {
    set var1 tIPv6FilterSharedPccRuleInsrtSiz
    set thisMethod ::EsrFilter::setTIPv6FilterSharedPccRuleInsrtSiz
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterSharedPccRuleNbrInsrt { tIPv6FilterId args } {
    set var1 tIPv6FilterSharedPccRuleNbrInsrt
    set thisMethod ::EsrFilter::getTIPv6FilterSharedPccRuleNbrInsrt
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterChainToSystemFilter { tIPv6FilterId args } {
    set var1 tIPv6FilterChainToSystemFilter
    set thisMethod ::EsrFilter::getTIPv6FilterChainToSystemFilter
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterChainToSystemFilter { tIPv6FilterId value args } {
    set var1 tIPv6FilterChainToSystemFilter
    set thisMethod ::EsrFilter::setTIPv6FilterChainToSystemFilter
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsRowStatus { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsRowStatus
    set thisMethod ::EsrFilter::getTIPv6FilterParamsRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsRowStatus { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsRowStatus
    set thisMethod ::EsrFilter::setTIPv6FilterParamsRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsLogId { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsLogId
    set thisMethod ::EsrFilter::getTIPv6FilterParamsLogId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsLogId { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsLogId
    set thisMethod ::EsrFilter::setTIPv6FilterParamsLogId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsDescription { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsDescription
    set thisMethod ::EsrFilter::getTIPv6FilterParamsDescription
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsDescription { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsDescription
    set thisMethod ::EsrFilter::setTIPv6FilterParamsDescription
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsAction { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsAction
    set thisMethod ::EsrFilter::getTIPv6FilterParamsAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsAction { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsAction
    set thisMethod ::EsrFilter::setTIPv6FilterParamsAction
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsForwardNH { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsForwardNH
    set thisMethod ::EsrFilter::getTIPv6FilterParamsForwardNH
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsForwardNH { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsForwardNH
    set thisMethod ::EsrFilter::setTIPv6FilterParamsForwardNH
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsForwardNHIndirect { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsForwardNHIndirect
    set thisMethod ::EsrFilter::getTIPv6FilterParamsForwardNHIndirect
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsForwardNHIndirect { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsForwardNHIndirect
    set thisMethod ::EsrFilter::setTIPv6FilterParamsForwardNHIndirect
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsRemarkDSCP { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsRemarkDSCP
    set thisMethod ::EsrFilter::getTIPv6FilterParamsRemarkDSCP
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsRemarkDSCP { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsRemarkDSCP
    set thisMethod ::EsrFilter::setTIPv6FilterParamsRemarkDSCP
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsRemarkDSCPMask { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsRemarkDSCPMask
    set thisMethod ::EsrFilter::getTIPv6FilterParamsRemarkDSCPMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsRemarkDSCPMask { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsRemarkDSCPMask
    set thisMethod ::EsrFilter::setTIPv6FilterParamsRemarkDSCPMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsRemarkDot1p { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsRemarkDot1p
    set thisMethod ::EsrFilter::getTIPv6FilterParamsRemarkDot1p
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsRemarkDot1p { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsRemarkDot1p
    set thisMethod ::EsrFilter::setTIPv6FilterParamsRemarkDot1p
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsSourceIpAddr { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsSourceIpAddr
    set thisMethod ::EsrFilter::getTIPv6FilterParamsSourceIpAddr
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsSourceIpAddr { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsSourceIpAddr
    set thisMethod ::EsrFilter::setTIPv6FilterParamsSourceIpAddr
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsSourceIpMask { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsSourceIpMask
    set thisMethod ::EsrFilter::getTIPv6FilterParamsSourceIpMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsSourceIpMask { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsSourceIpMask
    set thisMethod ::EsrFilter::setTIPv6FilterParamsSourceIpMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsDestinationIpAddr { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsDestinationIpAddr
    set thisMethod ::EsrFilter::getTIPv6FilterParamsDestinationIpAddr
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsDestinationIpAddr { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsDestinationIpAddr
    set thisMethod ::EsrFilter::setTIPv6FilterParamsDestinationIpAddr
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsDestinationIpMask { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsDestinationIpMask
    set thisMethod ::EsrFilter::getTIPv6FilterParamsDestinationIpMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsDestinationIpMask { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsDestinationIpMask
    set thisMethod ::EsrFilter::setTIPv6FilterParamsDestinationIpMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsNextHeader { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsNextHeader
    set thisMethod ::EsrFilter::getTIPv6FilterParamsNextHeader
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsNextHeader { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsNextHeader
    set thisMethod ::EsrFilter::setTIPv6FilterParamsNextHeader
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsSourcePortValue1 { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsSourcePortValue1
    set thisMethod ::EsrFilter::getTIPv6FilterParamsSourcePortValue1
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsSourcePortValue1 { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsSourcePortValue1
    set thisMethod ::EsrFilter::setTIPv6FilterParamsSourcePortValue1
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsSourcePortValue2 { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsSourcePortValue2
    set thisMethod ::EsrFilter::getTIPv6FilterParamsSourcePortValue2
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsSourcePortValue2 { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsSourcePortValue2
    set thisMethod ::EsrFilter::setTIPv6FilterParamsSourcePortValue2
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsSourcePortOperator { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsSourcePortOperator
    set thisMethod ::EsrFilter::getTIPv6FilterParamsSourcePortOperator
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsSourcePortOperator { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsSourcePortOperator
    set thisMethod ::EsrFilter::setTIPv6FilterParamsSourcePortOperator
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsDestPortValue1 { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsDestPortValue1
    set thisMethod ::EsrFilter::getTIPv6FilterParamsDestPortValue1
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsDestPortValue1 { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsDestPortValue1
    set thisMethod ::EsrFilter::setTIPv6FilterParamsDestPortValue1
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsDestPortValue2 { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsDestPortValue2
    set thisMethod ::EsrFilter::getTIPv6FilterParamsDestPortValue2
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsDestPortValue2 { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsDestPortValue2
    set thisMethod ::EsrFilter::setTIPv6FilterParamsDestPortValue2
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsDestPortOperator { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsDestPortOperator
    set thisMethod ::EsrFilter::getTIPv6FilterParamsDestPortOperator
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsDestPortOperator { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsDestPortOperator
    set thisMethod ::EsrFilter::setTIPv6FilterParamsDestPortOperator
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsDSCP { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsDSCP
    set thisMethod ::EsrFilter::getTIPv6FilterParamsDSCP
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsDSCP { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsDSCP
    set thisMethod ::EsrFilter::setTIPv6FilterParamsDSCP
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsTcpSyn { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsTcpSyn
    set thisMethod ::EsrFilter::getTIPv6FilterParamsTcpSyn
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsTcpSyn { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsTcpSyn
    set thisMethod ::EsrFilter::setTIPv6FilterParamsTcpSyn
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsTcpAck { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsTcpAck
    set thisMethod ::EsrFilter::getTIPv6FilterParamsTcpAck
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsTcpAck { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsTcpAck
    set thisMethod ::EsrFilter::setTIPv6FilterParamsTcpAck
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsIcmpCode { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsIcmpCode
    set thisMethod ::EsrFilter::getTIPv6FilterParamsIcmpCode
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsIcmpCode { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsIcmpCode
    set thisMethod ::EsrFilter::setTIPv6FilterParamsIcmpCode
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsIcmpType { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsIcmpType
    set thisMethod ::EsrFilter::getTIPv6FilterParamsIcmpType
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsIcmpType { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsIcmpType
    set thisMethod ::EsrFilter::setTIPv6FilterParamsIcmpType
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsCflowdSample { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsCflowdSample
    set thisMethod ::EsrFilter::getTIPv6FilterParamsCflowdSample
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsCflowdSample { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsCflowdSample
    set thisMethod ::EsrFilter::setTIPv6FilterParamsCflowdSample
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsCflowdIfSample { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsCflowdIfSample
    set thisMethod ::EsrFilter::getTIPv6FilterParamsCflowdIfSample
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsCflowdIfSample { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsCflowdIfSample
    set thisMethod ::EsrFilter::setTIPv6FilterParamsCflowdIfSample
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsForwardNHInterface { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsForwardNHInterface
    set thisMethod ::EsrFilter::getTIPv6FilterParamsForwardNHInterface
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsForwardNHInterface { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsForwardNHInterface
    set thisMethod ::EsrFilter::setTIPv6FilterParamsForwardNHInterface
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsIngressHitCount { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsIngressHitCount
    set thisMethod ::EsrFilter::getTIPv6FilterParamsIngressHitCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsEgressHitCount { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsEgressHitCount
    set thisMethod ::EsrFilter::getTIPv6FilterParamsEgressHitCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsLogInstantiated { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsLogInstantiated
    set thisMethod ::EsrFilter::getTIPv6FilterParamsLogInstantiated
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsForwardRedPlcy { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsForwardRedPlcy
    set thisMethod ::EsrFilter::getTIPv6FilterParamsForwardRedPlcy
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsForwardRedPlcy { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsForwardRedPlcy
    set thisMethod ::EsrFilter::setTIPv6FilterParamsForwardRedPlcy
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsActiveDest { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsActiveDest
    set thisMethod ::EsrFilter::getTIPv6FilterParamsActiveDest
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsTimeRangeName { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsTimeRangeName
    set thisMethod ::EsrFilter::getTIPv6FilterParamsTimeRangeName
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsTimeRangeName { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsTimeRangeName
    set thisMethod ::EsrFilter::setTIPv6FilterParamsTimeRangeName
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsTimeRangeState { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsTimeRangeState
    set thisMethod ::EsrFilter::getTIPv6FilterParamsTimeRangeState
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsIngrHitByteCount { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsIngrHitByteCount
    set thisMethod ::EsrFilter::getTIPv6FilterParamsIngrHitByteCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsEgrHitByteCount { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsEgrHitByteCount
    set thisMethod ::EsrFilter::getTIPv6FilterParamsEgrHitByteCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsFwdSvcId { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsFwdSvcId
    set thisMethod ::EsrFilter::getTIPv6FilterParamsFwdSvcId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsFwdSapPortId { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsFwdSapPortId
    set thisMethod ::EsrFilter::getTIPv6FilterParamsFwdSapPortId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsFwdSapPortId { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsFwdSapPortId
    set thisMethod ::EsrFilter::setTIPv6FilterParamsFwdSapPortId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsFwdSapEncapVal { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsFwdSapEncapVal
    set thisMethod ::EsrFilter::getTIPv6FilterParamsFwdSapEncapVal
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsFwdSapEncapVal { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsFwdSapEncapVal
    set thisMethod ::EsrFilter::setTIPv6FilterParamsFwdSapEncapVal
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsFwdSdpBind { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsFwdSdpBind
    set thisMethod ::EsrFilter::getTIPv6FilterParamsFwdSdpBind
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsFwdSdpBind { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsFwdSdpBind
    set thisMethod ::EsrFilter::setTIPv6FilterParamsFwdSdpBind
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsRedirectURL { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsRedirectURL
    set thisMethod ::EsrFilter::getTIPv6FilterParamsRedirectURL
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsRedirectURL { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsRedirectURL
    set thisMethod ::EsrFilter::setTIPv6FilterParamsRedirectURL
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsSrcIpPrefixList { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsSrcIpPrefixList
    set thisMethod ::EsrFilter::getTIPv6FilterParamsSrcIpPrefixList
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsSrcIpPrefixList { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsSrcIpPrefixList
    set thisMethod ::EsrFilter::setTIPv6FilterParamsSrcIpPrefixList
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsDstIpPrefixList { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsDstIpPrefixList
    set thisMethod ::EsrFilter::getTIPv6FilterParamsDstIpPrefixList
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsDstIpPrefixList { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsDstIpPrefixList
    set thisMethod ::EsrFilter::setTIPv6FilterParamsDstIpPrefixList
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsFragment { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsFragment
    set thisMethod ::EsrFilter::getTIPv6FilterParamsFragment
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsFragment { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsFragment
    set thisMethod ::EsrFilter::setTIPv6FilterParamsFragment
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsHopByHopOpt { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsHopByHopOpt
    set thisMethod ::EsrFilter::getTIPv6FilterParamsHopByHopOpt
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsHopByHopOpt { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsHopByHopOpt
    set thisMethod ::EsrFilter::setTIPv6FilterParamsHopByHopOpt
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsRoutingType0 { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsRoutingType0
    set thisMethod ::EsrFilter::getTIPv6FilterParamsRoutingType0
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsRoutingType0 { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsRoutingType0
    set thisMethod ::EsrFilter::setTIPv6FilterParamsRoutingType0
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsPortSelector { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsPortSelector
    set thisMethod ::EsrFilter::getTIPv6FilterParamsPortSelector
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsPortSelector { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsPortSelector
    set thisMethod ::EsrFilter::setTIPv6FilterParamsPortSelector
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsSrcPortList { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsSrcPortList
    set thisMethod ::EsrFilter::getTIPv6FilterParamsSrcPortList
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsSrcPortList { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsSrcPortList
    set thisMethod ::EsrFilter::setTIPv6FilterParamsSrcPortList
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsDstPortList { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsDstPortList
    set thisMethod ::EsrFilter::getTIPv6FilterParamsDstPortList
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsDstPortList { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsDstPortList
    set thisMethod ::EsrFilter::setTIPv6FilterParamsDstPortList
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsRdirAllwRadOvrd { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsRdirAllwRadOvrd
    set thisMethod ::EsrFilter::getTIPv6FilterParamsRdirAllwRadOvrd
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsRdirAllwRadOvrd { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsRdirAllwRadOvrd
    set thisMethod ::EsrFilter::setTIPv6FilterParamsRdirAllwRadOvrd
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsFwdRtrId { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsFwdRtrId
    set thisMethod ::EsrFilter::getTIPv6FilterParamsFwdRtrId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsFwdRtrId { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsFwdRtrId
    set thisMethod ::EsrFilter::setTIPv6FilterParamsFwdRtrId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsSrcIpFullMask { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsSrcIpFullMask
    set thisMethod ::EsrFilter::getTIPv6FilterParamsSrcIpFullMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsSrcIpFullMask { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsSrcIpFullMask
    set thisMethod ::EsrFilter::setTIPv6FilterParamsSrcIpFullMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsDstIpFullMask { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsDstIpFullMask
    set thisMethod ::EsrFilter::getTIPv6FilterParamsDstIpFullMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsDstIpFullMask { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsDstIpFullMask
    set thisMethod ::EsrFilter::setTIPv6FilterParamsDstIpFullMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsNatPolicyName { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsNatPolicyName
    set thisMethod ::EsrFilter::getTIPv6FilterParamsNatPolicyName
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsNatPolicyName { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsNatPolicyName
    set thisMethod ::EsrFilter::setTIPv6FilterParamsNatPolicyName
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsFlowLabel { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsFlowLabel
    set thisMethod ::EsrFilter::getTIPv6FilterParamsFlowLabel
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsFlowLabel { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsFlowLabel
    set thisMethod ::EsrFilter::setTIPv6FilterParamsFlowLabel
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsFlowLabelMask { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsFlowLabelMask
    set thisMethod ::EsrFilter::getTIPv6FilterParamsFlowLabelMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsFlowLabelMask { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsFlowLabelMask
    set thisMethod ::EsrFilter::setTIPv6FilterParamsFlowLabelMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsFwdLsp { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsFwdLsp
    set thisMethod ::EsrFilter::getTIPv6FilterParamsFwdLsp
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsFwdLsp { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsFwdLsp
    set thisMethod ::EsrFilter::setTIPv6FilterParamsFwdLsp
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsFwdLspRtrId { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsFwdLspRtrId
    set thisMethod ::EsrFilter::getTIPv6FilterParamsFwdLspRtrId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsFwdLspRtrId { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsFwdLspRtrId
    set thisMethod ::EsrFilter::setTIPv6FilterParamsFwdLspRtrId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrGrpInsrtdEntriesFilterType { args } {
    set var1 tFltrGrpInsrtdEntriesFilterType
    set thisMethod ::EsrFilter::getTFltrGrpInsrtdEntriesFilterType
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrGrpInsrtdEntriesFilterType { value args } {
    set var1 tFltrGrpInsrtdEntriesFilterType
    set thisMethod ::EsrFilter::setTFltrGrpInsrtdEntriesFilterType
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list $var1.0 $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrGrpInsrtdEntriesFilterId { args } {
    set var1 tFltrGrpInsrtdEntriesFilterId
    set thisMethod ::EsrFilter::getTFltrGrpInsrtdEntriesFilterId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrGrpInsrtdEntriesFilterId { value args } {
    set var1 tFltrGrpInsrtdEntriesFilterId
    set thisMethod ::EsrFilter::setTFltrGrpInsrtdEntriesFilterId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list $var1.0 $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrGrpInsrtdEntriesApplication { args } {
    set var1 tFltrGrpInsrtdEntriesApplication
    set thisMethod ::EsrFilter::getTFltrGrpInsrtdEntriesApplication
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrGrpInsrtdEntriesApplication { value args } {
    set var1 tFltrGrpInsrtdEntriesApplication
    set thisMethod ::EsrFilter::setTFltrGrpInsrtdEntriesApplication
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list $var1.0 $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrGrpInsrtdEntriesLocation { args } {
    set var1 tFltrGrpInsrtdEntriesLocation
    set thisMethod ::EsrFilter::getTFltrGrpInsrtdEntriesLocation
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrGrpInsrtdEntriesLocation { value args } {
    set var1 tFltrGrpInsrtdEntriesLocation
    set thisMethod ::EsrFilter::setTFltrGrpInsrtdEntriesLocation
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list $var1.0 $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrGrpInsrtdEntriesResult { args } {
    set var1 tFltrGrpInsrtdEntriesResult
    set thisMethod ::EsrFilter::getTFltrGrpInsrtdEntriesResult
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrGrpInsrtdEntriesFeedback { args } {
    set var1 tFltrGrpInsrtdEntriesFeedback
    set thisMethod ::EsrFilter::getTFltrGrpInsrtdEntriesFeedback
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrGrpInsrtdEntriesExecute { args } {
    set var1 tFltrGrpInsrtdEntriesExecute
    set thisMethod ::EsrFilter::getTFltrGrpInsrtdEntriesExecute
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrGrpInsrtdEntriesExecute { value args } {
    set var1 tFltrGrpInsrtdEntriesExecute
    set thisMethod ::EsrFilter::setTFltrGrpInsrtdEntriesExecute
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list $var1.0 $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcpFilterTableLastChanged { args } {
    set var1 tDhcpFilterTableLastChanged
    set thisMethod ::EsrFilter::getTDhcpFilterTableLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcpFilterRowStatus { tDhcpFilterId args } {
    set var1 tDhcpFilterRowStatus
    set thisMethod ::EsrFilter::getTDhcpFilterRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcpFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcpFilterRowStatus { tDhcpFilterId value args } {
    set var1 tDhcpFilterRowStatus
    set thisMethod ::EsrFilter::setTDhcpFilterRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcpFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcpFilterLastChanged { tDhcpFilterId args } {
    set var1 tDhcpFilterLastChanged
    set thisMethod ::EsrFilter::getTDhcpFilterLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcpFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcpFilterDescription { tDhcpFilterId args } {
    set var1 tDhcpFilterDescription
    set thisMethod ::EsrFilter::getTDhcpFilterDescription
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcpFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcpFilterDescription { tDhcpFilterId value args } {
    set var1 tDhcpFilterDescription
    set thisMethod ::EsrFilter::setTDhcpFilterDescription
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcpFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcpFilterDefAction { tDhcpFilterId args } {
    set var1 tDhcpFilterDefAction
    set thisMethod ::EsrFilter::getTDhcpFilterDefAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcpFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcpFilterDefAction { tDhcpFilterId value args } {
    set var1 tDhcpFilterDefAction
    set thisMethod ::EsrFilter::setTDhcpFilterDefAction
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcpFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcpFilterParamsTblLastChanged { args } {
    set var1 tDhcpFilterParamsTblLastChanged
    set thisMethod ::EsrFilter::getTDhcpFilterParamsTblLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcpFilterParamsRowStatus { tDhcpFilterId tDhcpFilterParamsId args } {
    set var1 tDhcpFilterParamsRowStatus
    set thisMethod ::EsrFilter::getTDhcpFilterParamsRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcpFilterId $tDhcpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcpFilterParamsRowStatus { tDhcpFilterId tDhcpFilterParamsId value args } {
    set var1 tDhcpFilterParamsRowStatus
    set thisMethod ::EsrFilter::setTDhcpFilterParamsRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcpFilterId $tDhcpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcpFilterParamsLastChanged { tDhcpFilterId tDhcpFilterParamsId args } {
    set var1 tDhcpFilterParamsLastChanged
    set thisMethod ::EsrFilter::getTDhcpFilterParamsLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcpFilterId $tDhcpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcpFilterParamsOptionNumber { tDhcpFilterId tDhcpFilterParamsId args } {
    set var1 tDhcpFilterParamsOptionNumber
    set thisMethod ::EsrFilter::getTDhcpFilterParamsOptionNumber
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcpFilterId $tDhcpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcpFilterParamsOptionNumber { tDhcpFilterId tDhcpFilterParamsId value args } {
    set var1 tDhcpFilterParamsOptionNumber
    set thisMethod ::EsrFilter::setTDhcpFilterParamsOptionNumber
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcpFilterId $tDhcpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcpFilterParamsOptionMatch { tDhcpFilterId tDhcpFilterParamsId args } {
    set var1 tDhcpFilterParamsOptionMatch
    set thisMethod ::EsrFilter::getTDhcpFilterParamsOptionMatch
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcpFilterId $tDhcpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcpFilterParamsOptionMatch { tDhcpFilterId tDhcpFilterParamsId value args } {
    set var1 tDhcpFilterParamsOptionMatch
    set thisMethod ::EsrFilter::setTDhcpFilterParamsOptionMatch
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcpFilterId $tDhcpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcpFilterParamsAction { tDhcpFilterId tDhcpFilterParamsId args } {
    set var1 tDhcpFilterParamsAction
    set thisMethod ::EsrFilter::getTDhcpFilterParamsAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcpFilterId $tDhcpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcpFilterParamsAction { tDhcpFilterId tDhcpFilterParamsId value args } {
    set var1 tDhcpFilterParamsAction
    set thisMethod ::EsrFilter::setTDhcpFilterParamsAction
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcpFilterId $tDhcpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcpFilterParamsOptionValue { tDhcpFilterId tDhcpFilterParamsId args } {
    set var1 tDhcpFilterParamsOptionValue
    set thisMethod ::EsrFilter::getTDhcpFilterParamsOptionValue
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcpFilterId $tDhcpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcpFilterParamsOptionValue { tDhcpFilterId tDhcpFilterParamsId value args } {
    set var1 tDhcpFilterParamsOptionValue
    set thisMethod ::EsrFilter::setTDhcpFilterParamsOptionValue
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcpFilterId $tDhcpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterNameTableLastChgd { args } {
    set var1 tMacFilterNameTableLastChgd
    set thisMethod ::EsrFilter::getTMacFilterNameTableLastChgd
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterNameId { tMacFilterName args } {
    set var1 tMacFilterNameId
    set thisMethod ::EsrFilter::getTMacFilterNameId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterNameRowStatus { tMacFilterName args } {
    set var1 tMacFilterNameRowStatus
    set thisMethod ::EsrFilter::getTMacFilterNameRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTMacFilterNameLastChanged { tMacFilterName args } {
    set var1 tMacFilterNameLastChanged
    set thisMethod ::EsrFilter::getTMacFilterNameLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tMacFilterName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIpFilterNameTableLastChgd { args } {
    set var1 tIpFilterNameTableLastChgd
    set thisMethod ::EsrFilter::getTIpFilterNameTableLastChgd
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIpFilterNameId { tIpFilterName args } {
    set var1 tIpFilterNameId
    set thisMethod ::EsrFilter::getTIpFilterNameId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIpFilterName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIpFilterNameRowStatus { tIpFilterName args } {
    set var1 tIpFilterNameRowStatus
    set thisMethod ::EsrFilter::getTIpFilterNameRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIpFilterName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIpFilterNameLastChanged { tIpFilterName args } {
    set var1 tIpFilterNameLastChanged
    set thisMethod ::EsrFilter::getTIpFilterNameLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIpFilterName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIpv6FilterNameTableLastChgd { args } {
    set var1 tIpv6FilterNameTableLastChgd
    set thisMethod ::EsrFilter::getTIpv6FilterNameTableLastChgd
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIpv6FilterNameId { tIpv6FilterName args } {
    set var1 tIpv6FilterNameId
    set thisMethod ::EsrFilter::getTIpv6FilterNameId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIpv6FilterName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIpv6FilterNameRowStatus { tIpv6FilterName args } {
    set var1 tIpv6FilterNameRowStatus
    set thisMethod ::EsrFilter::getTIpv6FilterNameRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIpv6FilterName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIpv6FilterNameLastChanged { tIpv6FilterName args } {
    set var1 tIpv6FilterNameLastChanged
    set thisMethod ::EsrFilter::getTIpv6FilterNameLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIpv6FilterName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiReservedBlockTableLastChanged { args } {
    set var1 tLiReservedBlockTableLastChanged
    set thisMethod ::EsrFilter::getTLiReservedBlockTableLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiReservedBlockRowStatus { tLiReservedBlockName args } {
    set var1 tLiReservedBlockRowStatus
    set thisMethod ::EsrFilter::getTLiReservedBlockRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiReservedBlockName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiReservedBlockRowStatus { tLiReservedBlockName value args } {
    set var1 tLiReservedBlockRowStatus
    set thisMethod ::EsrFilter::setTLiReservedBlockRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiReservedBlockName ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiReservedBlockLastChanged { tLiReservedBlockName args } {
    set var1 tLiReservedBlockLastChanged
    set thisMethod ::EsrFilter::getTLiReservedBlockLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiReservedBlockName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiReservedBlockDescription { tLiReservedBlockName args } {
    set var1 tLiReservedBlockDescription
    set thisMethod ::EsrFilter::getTLiReservedBlockDescription
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiReservedBlockName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiReservedBlockDescription { tLiReservedBlockName value args } {
    set var1 tLiReservedBlockDescription
    set thisMethod ::EsrFilter::setTLiReservedBlockDescription
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiReservedBlockName ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiReservedBlockStart { tLiReservedBlockName args } {
    set var1 tLiReservedBlockStart
    set thisMethod ::EsrFilter::getTLiReservedBlockStart
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiReservedBlockName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiReservedBlockStart { tLiReservedBlockName value args } {
    set var1 tLiReservedBlockStart
    set thisMethod ::EsrFilter::setTLiReservedBlockStart
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiReservedBlockName ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiReservedBlockSize { tLiReservedBlockName args } {
    set var1 tLiReservedBlockSize
    set thisMethod ::EsrFilter::getTLiReservedBlockSize
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiReservedBlockName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiReservedBlockSize { tLiReservedBlockName value args } {
    set var1 tLiReservedBlockSize
    set thisMethod ::EsrFilter::setTLiReservedBlockSize
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiReservedBlockName ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiReservedBlockFltrTableLastChg { args } {
    set var1 tLiReservedBlockFltrTableLastChg
    set thisMethod ::EsrFilter::getTLiReservedBlockFltrTableLastChg
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiReservedBlockFltrRowStatus { tLiReservedBlockName tLiReservedBlockFltrType tLiReservedBlockFltrIdStart tLiReservedBlockFltrIdEnd args } {
    set var1 tLiReservedBlockFltrRowStatus
    set thisMethod ::EsrFilter::getTLiReservedBlockFltrRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiReservedBlockName $tLiReservedBlockFltrType $tLiReservedBlockFltrIdStart $tLiReservedBlockFltrIdEnd ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiReservedBlockFltrRowStatus { tLiReservedBlockName tLiReservedBlockFltrType tLiReservedBlockFltrIdStart tLiReservedBlockFltrIdEnd value args } {
    set var1 tLiReservedBlockFltrRowStatus
    set thisMethod ::EsrFilter::setTLiReservedBlockFltrRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiReservedBlockName $tLiReservedBlockFltrType $tLiReservedBlockFltrIdStart $tLiReservedBlockFltrIdEnd ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiReservedBlockFltrLastChanged { tLiReservedBlockName tLiReservedBlockFltrType tLiReservedBlockFltrIdStart tLiReservedBlockFltrIdEnd args } {
    set var1 tLiReservedBlockFltrLastChanged
    set thisMethod ::EsrFilter::getTLiReservedBlockFltrLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiReservedBlockName $tLiReservedBlockFltrType $tLiReservedBlockFltrIdStart $tLiReservedBlockFltrIdEnd ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiFilterTableLastChanged { args } {
    set var1 tLiFilterTableLastChanged
    set thisMethod ::EsrFilter::getTLiFilterTableLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiFilterRowStatus { tLiFilterType tLiFilterName args } {
    set var1 tLiFilterRowStatus
    set thisMethod ::EsrFilter::getTLiFilterRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiFilterRowStatus { tLiFilterType tLiFilterName value args } {
    set var1 tLiFilterRowStatus
    set thisMethod ::EsrFilter::setTLiFilterRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiFilterLastChanged { tLiFilterType tLiFilterName args } {
    set var1 tLiFilterLastChanged
    set thisMethod ::EsrFilter::getTLiFilterLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiFilterDescription { tLiFilterType tLiFilterName args } {
    set var1 tLiFilterDescription
    set thisMethod ::EsrFilter::getTLiFilterDescription
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiFilterDescription { tLiFilterType tLiFilterName value args } {
    set var1 tLiFilterDescription
    set thisMethod ::EsrFilter::setTLiFilterDescription
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiFilterAssociationTableLastChg { args } {
    set var1 tLiFilterAssociationTableLastChg
    set thisMethod ::EsrFilter::getTLiFilterAssociationTableLastChg
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiFilterAssociationRowStatus { tLiFilterType tLiFilterName tLiFilterAssociationFltrId args } {
    set var1 tLiFilterAssociationRowStatus
    set thisMethod ::EsrFilter::getTLiFilterAssociationRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiFilterAssociationFltrId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiFilterAssociationRowStatus { tLiFilterType tLiFilterName tLiFilterAssociationFltrId value args } {
    set var1 tLiFilterAssociationRowStatus
    set thisMethod ::EsrFilter::setTLiFilterAssociationRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiFilterAssociationFltrId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiFilterAssociationLastChg { tLiFilterType tLiFilterName tLiFilterAssociationFltrId args } {
    set var1 tLiFilterAssociationLastChg
    set thisMethod ::EsrFilter::getTLiFilterAssociationLastChg
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiFilterAssociationFltrId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiMacFilterParamsTableLastChg { args } {
    set var1 tLiMacFilterParamsTableLastChg
    set thisMethod ::EsrFilter::getTLiMacFilterParamsTableLastChg
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiMacFilterParamsRowStatus { tLiFilterType tLiFilterName tLiMacFilterParamsId args } {
    set var1 tLiMacFilterParamsRowStatus
    set thisMethod ::EsrFilter::getTLiMacFilterParamsRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiMacFilterParamsRowStatus { tLiFilterType tLiFilterName tLiMacFilterParamsId value args } {
    set var1 tLiMacFilterParamsRowStatus
    set thisMethod ::EsrFilter::setTLiMacFilterParamsRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiMacFilterParamsLastChanged { tLiFilterType tLiFilterName tLiMacFilterParamsId args } {
    set var1 tLiMacFilterParamsLastChanged
    set thisMethod ::EsrFilter::getTLiMacFilterParamsLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiMacFilterParamsDescription { tLiFilterType tLiFilterName tLiMacFilterParamsId args } {
    set var1 tLiMacFilterParamsDescription
    set thisMethod ::EsrFilter::getTLiMacFilterParamsDescription
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiMacFilterParamsDescription { tLiFilterType tLiFilterName tLiMacFilterParamsId value args } {
    set var1 tLiMacFilterParamsDescription
    set thisMethod ::EsrFilter::setTLiMacFilterParamsDescription
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiMacFilterParamsFrameType { tLiFilterType tLiFilterName tLiMacFilterParamsId args } {
    set var1 tLiMacFilterParamsFrameType
    set thisMethod ::EsrFilter::getTLiMacFilterParamsFrameType
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiMacFilterParamsFrameType { tLiFilterType tLiFilterName tLiMacFilterParamsId value args } {
    set var1 tLiMacFilterParamsFrameType
    set thisMethod ::EsrFilter::setTLiMacFilterParamsFrameType
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiMacFilterParamsSrcMAC { tLiFilterType tLiFilterName tLiMacFilterParamsId args } {
    set var1 tLiMacFilterParamsSrcMAC
    set thisMethod ::EsrFilter::getTLiMacFilterParamsSrcMAC
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiMacFilterParamsSrcMAC { tLiFilterType tLiFilterName tLiMacFilterParamsId value args } {
    set var1 tLiMacFilterParamsSrcMAC
    set thisMethod ::EsrFilter::setTLiMacFilterParamsSrcMAC
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiMacFilterParamsSrcMACMask { tLiFilterType tLiFilterName tLiMacFilterParamsId args } {
    set var1 tLiMacFilterParamsSrcMACMask
    set thisMethod ::EsrFilter::getTLiMacFilterParamsSrcMACMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiMacFilterParamsSrcMACMask { tLiFilterType tLiFilterName tLiMacFilterParamsId value args } {
    set var1 tLiMacFilterParamsSrcMACMask
    set thisMethod ::EsrFilter::setTLiMacFilterParamsSrcMACMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiMacFilterParamsDstMAC { tLiFilterType tLiFilterName tLiMacFilterParamsId args } {
    set var1 tLiMacFilterParamsDstMAC
    set thisMethod ::EsrFilter::getTLiMacFilterParamsDstMAC
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiMacFilterParamsDstMAC { tLiFilterType tLiFilterName tLiMacFilterParamsId value args } {
    set var1 tLiMacFilterParamsDstMAC
    set thisMethod ::EsrFilter::setTLiMacFilterParamsDstMAC
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiMacFilterParamsDstMACMask { tLiFilterType tLiFilterName tLiMacFilterParamsId args } {
    set var1 tLiMacFilterParamsDstMACMask
    set thisMethod ::EsrFilter::getTLiMacFilterParamsDstMACMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiMacFilterParamsDstMACMask { tLiFilterType tLiFilterName tLiMacFilterParamsId value args } {
    set var1 tLiMacFilterParamsDstMACMask
    set thisMethod ::EsrFilter::setTLiMacFilterParamsDstMACMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiMacFilterParamsIngrHitCount { tLiFilterType tLiFilterName tLiMacFilterParamsId args } {
    set var1 tLiMacFilterParamsIngrHitCount
    set thisMethod ::EsrFilter::getTLiMacFilterParamsIngrHitCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiMacFilterParamsEgrHitCount { tLiFilterType tLiFilterName tLiMacFilterParamsId args } {
    set var1 tLiMacFilterParamsEgrHitCount
    set thisMethod ::EsrFilter::getTLiMacFilterParamsEgrHitCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiMacFilterParamsIngrHitBytes { tLiFilterType tLiFilterName tLiMacFilterParamsId args } {
    set var1 tLiMacFilterParamsIngrHitBytes
    set thisMethod ::EsrFilter::getTLiMacFilterParamsIngrHitBytes
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiMacFilterParamsEgrHitBytes { tLiFilterType tLiFilterName tLiMacFilterParamsId args } {
    set var1 tLiMacFilterParamsEgrHitBytes
    set thisMethod ::EsrFilter::getTLiMacFilterParamsEgrHitBytes
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiMacFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFilterParamsTableLastChg { args } {
    set var1 tLiIpFilterParamsTableLastChg
    set thisMethod ::EsrFilter::getTLiIpFilterParamsTableLastChg
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFilterParamsLastChanged { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFilterParamsLastChanged
    set thisMethod ::EsrFilter::getTLiIpFilterParamsLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFilterParamsRowStatus { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFilterParamsRowStatus
    set thisMethod ::EsrFilter::getTLiIpFilterParamsRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiIpFilterParamsRowStatus { tLiFilterType tLiFilterName tLiIpFilterParamsId value args } {
    set var1 tLiIpFilterParamsRowStatus
    set thisMethod ::EsrFilter::setTLiIpFilterParamsRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFilterParamsDescription { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFilterParamsDescription
    set thisMethod ::EsrFilter::getTLiIpFilterParamsDescription
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiIpFilterParamsDescription { tLiFilterType tLiFilterName tLiIpFilterParamsId value args } {
    set var1 tLiIpFilterParamsDescription
    set thisMethod ::EsrFilter::setTLiIpFilterParamsDescription
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFilterParamsSrcIpAddrType { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFilterParamsSrcIpAddrType
    set thisMethod ::EsrFilter::getTLiIpFilterParamsSrcIpAddrType
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiIpFilterParamsSrcIpAddrType { tLiFilterType tLiFilterName tLiIpFilterParamsId value args } {
    set var1 tLiIpFilterParamsSrcIpAddrType
    set thisMethod ::EsrFilter::setTLiIpFilterParamsSrcIpAddrType
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFilterParamsSrcIpAddr { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFilterParamsSrcIpAddr
    set thisMethod ::EsrFilter::getTLiIpFilterParamsSrcIpAddr
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiIpFilterParamsSrcIpAddr { tLiFilterType tLiFilterName tLiIpFilterParamsId value args } {
    set var1 tLiIpFilterParamsSrcIpAddr
    set thisMethod ::EsrFilter::setTLiIpFilterParamsSrcIpAddr
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFilterParamsSrcIpFullMask { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFilterParamsSrcIpFullMask
    set thisMethod ::EsrFilter::getTLiIpFilterParamsSrcIpFullMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiIpFilterParamsSrcIpFullMask { tLiFilterType tLiFilterName tLiIpFilterParamsId value args } {
    set var1 tLiIpFilterParamsSrcIpFullMask
    set thisMethod ::EsrFilter::setTLiIpFilterParamsSrcIpFullMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFilterParamsDstIpAddrType { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFilterParamsDstIpAddrType
    set thisMethod ::EsrFilter::getTLiIpFilterParamsDstIpAddrType
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiIpFilterParamsDstIpAddrType { tLiFilterType tLiFilterName tLiIpFilterParamsId value args } {
    set var1 tLiIpFilterParamsDstIpAddrType
    set thisMethod ::EsrFilter::setTLiIpFilterParamsDstIpAddrType
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFilterParamsDstIpAddr { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFilterParamsDstIpAddr
    set thisMethod ::EsrFilter::getTLiIpFilterParamsDstIpAddr
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiIpFilterParamsDstIpAddr { tLiFilterType tLiFilterName tLiIpFilterParamsId value args } {
    set var1 tLiIpFilterParamsDstIpAddr
    set thisMethod ::EsrFilter::setTLiIpFilterParamsDstIpAddr
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFilterParamsDstIpFullMask { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFilterParamsDstIpFullMask
    set thisMethod ::EsrFilter::getTLiIpFilterParamsDstIpFullMask
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiIpFilterParamsDstIpFullMask { tLiFilterType tLiFilterName tLiIpFilterParamsId value args } {
    set var1 tLiIpFilterParamsDstIpFullMask
    set thisMethod ::EsrFilter::setTLiIpFilterParamsDstIpFullMask
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFilterParamsProtocolNextHdr { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFilterParamsProtocolNextHdr
    set thisMethod ::EsrFilter::getTLiIpFilterParamsProtocolNextHdr
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiIpFilterParamsProtocolNextHdr { tLiFilterType tLiFilterName tLiIpFilterParamsId value args } {
    set var1 tLiIpFilterParamsProtocolNextHdr
    set thisMethod ::EsrFilter::setTLiIpFilterParamsProtocolNextHdr
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFilterParamsSrcPortValue1 { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFilterParamsSrcPortValue1
    set thisMethod ::EsrFilter::getTLiIpFilterParamsSrcPortValue1
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiIpFilterParamsSrcPortValue1 { tLiFilterType tLiFilterName tLiIpFilterParamsId value args } {
    set var1 tLiIpFilterParamsSrcPortValue1
    set thisMethod ::EsrFilter::setTLiIpFilterParamsSrcPortValue1
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFilterParamsSrcPortValue2 { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFilterParamsSrcPortValue2
    set thisMethod ::EsrFilter::getTLiIpFilterParamsSrcPortValue2
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiIpFilterParamsSrcPortValue2 { tLiFilterType tLiFilterName tLiIpFilterParamsId value args } {
    set var1 tLiIpFilterParamsSrcPortValue2
    set thisMethod ::EsrFilter::setTLiIpFilterParamsSrcPortValue2
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFilterParamsSrcPortOper { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFilterParamsSrcPortOper
    set thisMethod ::EsrFilter::getTLiIpFilterParamsSrcPortOper
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiIpFilterParamsSrcPortOper { tLiFilterType tLiFilterName tLiIpFilterParamsId value args } {
    set var1 tLiIpFilterParamsSrcPortOper
    set thisMethod ::EsrFilter::setTLiIpFilterParamsSrcPortOper
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFilterParamsDstPortValue1 { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFilterParamsDstPortValue1
    set thisMethod ::EsrFilter::getTLiIpFilterParamsDstPortValue1
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiIpFilterParamsDstPortValue1 { tLiFilterType tLiFilterName tLiIpFilterParamsId value args } {
    set var1 tLiIpFilterParamsDstPortValue1
    set thisMethod ::EsrFilter::setTLiIpFilterParamsDstPortValue1
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFilterParamsDstPortValue2 { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFilterParamsDstPortValue2
    set thisMethod ::EsrFilter::getTLiIpFilterParamsDstPortValue2
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiIpFilterParamsDstPortValue2 { tLiFilterType tLiFilterName tLiIpFilterParamsId value args } {
    set var1 tLiIpFilterParamsDstPortValue2
    set thisMethod ::EsrFilter::setTLiIpFilterParamsDstPortValue2
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFilterParamsDstPortOper { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFilterParamsDstPortOper
    set thisMethod ::EsrFilter::getTLiIpFilterParamsDstPortOper
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTLiIpFilterParamsDstPortOper { tLiFilterType tLiFilterName tLiIpFilterParamsId value args } {
    set var1 tLiIpFilterParamsDstPortOper
    set thisMethod ::EsrFilter::setTLiIpFilterParamsDstPortOper
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFltrParamsInfIngrHitCount { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFltrParamsInfIngrHitCount
    set thisMethod ::EsrFilter::getTLiIpFltrParamsInfIngrHitCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFltrParamsInfEgrHitCount { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFltrParamsInfEgrHitCount
    set thisMethod ::EsrFilter::getTLiIpFltrParamsInfEgrHitCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFltrParamsInfIngrHitBytes { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFltrParamsInfIngrHitBytes
    set thisMethod ::EsrFilter::getTLiIpFltrParamsInfIngrHitBytes
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTLiIpFltrParamsInfEgrHitBytes { tLiFilterType tLiFilterName tLiIpFilterParamsId args } {
    set var1 tLiIpFltrParamsInfEgrHitBytes
    set thisMethod ::EsrFilter::getTLiIpFltrParamsInfEgrHitBytes
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tLiFilterType $tLiFilterName $tLiIpFilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterPrefixListTableLstChng { args } {
    set var1 tFilterPrefixListTableLstChng
    set thisMethod ::EsrFilter::getTFilterPrefixListTableLstChng
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterPrefixListRowStatus { tFilterPrefixListType tFilterPrefixListName args } {
    set var1 tFilterPrefixListRowStatus
    set thisMethod ::EsrFilter::getTFilterPrefixListRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterPrefixListType $tFilterPrefixListName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterPrefixListRowStatus { tFilterPrefixListType tFilterPrefixListName value args } {
    set var1 tFilterPrefixListRowStatus
    set thisMethod ::EsrFilter::setTFilterPrefixListRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterPrefixListType $tFilterPrefixListName ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterPrefixListLastChanged { tFilterPrefixListType tFilterPrefixListName args } {
    set var1 tFilterPrefixListLastChanged
    set thisMethod ::EsrFilter::getTFilterPrefixListLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterPrefixListType $tFilterPrefixListName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterPrefixListDescription { tFilterPrefixListType tFilterPrefixListName args } {
    set var1 tFilterPrefixListDescription
    set thisMethod ::EsrFilter::getTFilterPrefixListDescription
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterPrefixListType $tFilterPrefixListName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterPrefixListDescription { tFilterPrefixListType tFilterPrefixListName value args } {
    set var1 tFilterPrefixListDescription
    set thisMethod ::EsrFilter::setTFilterPrefixListDescription
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterPrefixListType $tFilterPrefixListName ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterPrefixListEntryTblLstChg { args } {
    set var1 tFilterPrefixListEntryTblLstChg
    set thisMethod ::EsrFilter::getTFilterPrefixListEntryTblLstChg
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterPrefixListEntryRowStatus { tFilterPrefixListType tFilterPrefixListName tFilterPrefixListEntryPrefixType tFilterPrefixListEntryPrefix tFilterPrefixListEntryPrefixLen args } {
    set var1 tFilterPrefixListEntryRowStatus
    set thisMethod ::EsrFilter::getTFilterPrefixListEntryRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterPrefixListType $tFilterPrefixListName $tFilterPrefixListEntryPrefixType $tFilterPrefixListEntryPrefix $tFilterPrefixListEntryPrefixLen ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterPrefixListEntryRowStatus { tFilterPrefixListType tFilterPrefixListName tFilterPrefixListEntryPrefixType tFilterPrefixListEntryPrefix tFilterPrefixListEntryPrefixLen value args } {
    set var1 tFilterPrefixListEntryRowStatus
    set thisMethod ::EsrFilter::setTFilterPrefixListEntryRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterPrefixListType $tFilterPrefixListName $tFilterPrefixListEntryPrefixType $tFilterPrefixListEntryPrefix $tFilterPrefixListEntryPrefixLen ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterEmbeddedRefTableLstChg { args } {
    set var1 tFilterEmbeddedRefTableLstChg
    set thisMethod ::EsrFilter::getTFilterEmbeddedRefTableLstChg
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterEmbeddedRefRowStatus { tFilterEmbeddedRefFilterType tFilterEmbeddedRefInsertFltrId tFilterEmbeddedRefEmbeddedFltrId tFilterEmbeddedRefOffset args } {
    set var1 tFilterEmbeddedRefRowStatus
    set thisMethod ::EsrFilter::getTFilterEmbeddedRefRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterEmbeddedRefFilterType $tFilterEmbeddedRefInsertFltrId $tFilterEmbeddedRefEmbeddedFltrId $tFilterEmbeddedRefOffset ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterEmbeddedRefRowStatus { tFilterEmbeddedRefFilterType tFilterEmbeddedRefInsertFltrId tFilterEmbeddedRefEmbeddedFltrId tFilterEmbeddedRefOffset value args } {
    set var1 tFilterEmbeddedRefRowStatus
    set thisMethod ::EsrFilter::setTFilterEmbeddedRefRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterEmbeddedRefFilterType $tFilterEmbeddedRefInsertFltrId $tFilterEmbeddedRefEmbeddedFltrId $tFilterEmbeddedRefOffset ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterEmbeddedRefAdminState { tFilterEmbeddedRefFilterType tFilterEmbeddedRefInsertFltrId tFilterEmbeddedRefEmbeddedFltrId tFilterEmbeddedRefOffset args } {
    set var1 tFilterEmbeddedRefAdminState
    set thisMethod ::EsrFilter::getTFilterEmbeddedRefAdminState
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterEmbeddedRefFilterType $tFilterEmbeddedRefInsertFltrId $tFilterEmbeddedRefEmbeddedFltrId $tFilterEmbeddedRefOffset ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterEmbeddedRefAdminState { tFilterEmbeddedRefFilterType tFilterEmbeddedRefInsertFltrId tFilterEmbeddedRefEmbeddedFltrId tFilterEmbeddedRefOffset value args } {
    set var1 tFilterEmbeddedRefAdminState
    set thisMethod ::EsrFilter::setTFilterEmbeddedRefAdminState
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterEmbeddedRefFilterType $tFilterEmbeddedRefInsertFltrId $tFilterEmbeddedRefEmbeddedFltrId $tFilterEmbeddedRefOffset ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterEmbeddedRefOperState { tFilterEmbeddedRefFilterType tFilterEmbeddedRefInsertFltrId tFilterEmbeddedRefEmbeddedFltrId tFilterEmbeddedRefOffset args } {
    set var1 tFilterEmbeddedRefOperState
    set thisMethod ::EsrFilter::getTFilterEmbeddedRefOperState
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterEmbeddedRefFilterType $tFilterEmbeddedRefInsertFltrId $tFilterEmbeddedRefEmbeddedFltrId $tFilterEmbeddedRefOffset ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterPortListTableLstChng { args } {
    set var1 tFilterPortListTableLstChng
    set thisMethod ::EsrFilter::getTFilterPortListTableLstChng
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterPortListRowStatus { tFilterPortListName args } {
    set var1 tFilterPortListRowStatus
    set thisMethod ::EsrFilter::getTFilterPortListRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterPortListName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterPortListRowStatus { tFilterPortListName value args } {
    set var1 tFilterPortListRowStatus
    set thisMethod ::EsrFilter::setTFilterPortListRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterPortListName ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterPortListLastChanged { tFilterPortListName args } {
    set var1 tFilterPortListLastChanged
    set thisMethod ::EsrFilter::getTFilterPortListLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterPortListName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterPortListDescription { tFilterPortListName args } {
    set var1 tFilterPortListDescription
    set thisMethod ::EsrFilter::getTFilterPortListDescription
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterPortListName ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterPortListDescription { tFilterPortListName value args } {
    set var1 tFilterPortListDescription
    set thisMethod ::EsrFilter::setTFilterPortListDescription
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterPortListName ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterPortListEntryTblLstChg { args } {
    set var1 tFilterPortListEntryTblLstChg
    set thisMethod ::EsrFilter::getTFilterPortListEntryTblLstChg
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterPortListEntryRowStatus { tFilterPortListName tFilterPortListEntryPortLow tFilterPortListEntryPortHigh args } {
    set var1 tFilterPortListEntryRowStatus
    set thisMethod ::EsrFilter::getTFilterPortListEntryRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterPortListName $tFilterPortListEntryPortLow $tFilterPortListEntryPortHigh ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterPortListEntryRowStatus { tFilterPortListName tFilterPortListEntryPortLow tFilterPortListEntryPortHigh value args } {
    set var1 tFilterPortListEntryRowStatus
    set thisMethod ::EsrFilter::setTFilterPortListEntryRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterPortListName $tFilterPortListEntryPortLow $tFilterPortListEntryPortHigh ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterApplyPathTableLstChng { args } {
    set var1 tFilterApplyPathTableLstChng
    set thisMethod ::EsrFilter::getTFilterApplyPathTableLstChng
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterApplyPathRowStatus { tFilterPrefixListType tFilterPrefixListName tFilterApplyPathSource tFilterApplyPathIndex args } {
    set var1 tFilterApplyPathRowStatus
    set thisMethod ::EsrFilter::getTFilterApplyPathRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterPrefixListType $tFilterPrefixListName $tFilterApplyPathSource $tFilterApplyPathIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterApplyPathRowStatus { tFilterPrefixListType tFilterPrefixListName tFilterApplyPathSource tFilterApplyPathIndex value args } {
    set var1 tFilterApplyPathRowStatus
    set thisMethod ::EsrFilter::setTFilterApplyPathRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterPrefixListType $tFilterPrefixListName $tFilterApplyPathSource $tFilterApplyPathIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterApplyPathLastChanged { tFilterPrefixListType tFilterPrefixListName tFilterApplyPathSource tFilterApplyPathIndex args } {
    set var1 tFilterApplyPathLastChanged
    set thisMethod ::EsrFilter::getTFilterApplyPathLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterPrefixListType $tFilterPrefixListName $tFilterApplyPathSource $tFilterApplyPathIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterApplyPathMatch1 { tFilterPrefixListType tFilterPrefixListName tFilterApplyPathSource tFilterApplyPathIndex args } {
    set var1 tFilterApplyPathMatch1
    set thisMethod ::EsrFilter::getTFilterApplyPathMatch1
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterPrefixListType $tFilterPrefixListName $tFilterApplyPathSource $tFilterApplyPathIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterApplyPathMatch1 { tFilterPrefixListType tFilterPrefixListName tFilterApplyPathSource tFilterApplyPathIndex value args } {
    set var1 tFilterApplyPathMatch1
    set thisMethod ::EsrFilter::setTFilterApplyPathMatch1
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterPrefixListType $tFilterPrefixListName $tFilterApplyPathSource $tFilterApplyPathIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterApplyPathMatch2 { tFilterPrefixListType tFilterPrefixListName tFilterApplyPathSource tFilterApplyPathIndex args } {
    set var1 tFilterApplyPathMatch2
    set thisMethod ::EsrFilter::getTFilterApplyPathMatch2
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterPrefixListType $tFilterPrefixListName $tFilterApplyPathSource $tFilterApplyPathIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterApplyPathMatch2 { tFilterPrefixListType tFilterPrefixListName tFilterApplyPathSource tFilterApplyPathIndex value args } {
    set var1 tFilterApplyPathMatch2
    set thisMethod ::EsrFilter::setTFilterApplyPathMatch2
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterPrefixListType $tFilterPrefixListName $tFilterApplyPathSource $tFilterApplyPathIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrEmbedRefInfEntryCnt { tFilterEmbeddedRefFilterType tFilterEmbeddedRefInsertFltrId tFilterEmbeddedRefEmbeddedFltrId tFilterEmbeddedRefOffset args } {
    set var1 tFltrEmbedRefInfEntryCnt
    set thisMethod ::EsrFilter::getTFltrEmbedRefInfEntryCnt
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterEmbeddedRefFilterType $tFilterEmbeddedRefInsertFltrId $tFilterEmbeddedRefEmbeddedFltrId $tFilterEmbeddedRefOffset ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrEmbedRefInfEntryCntInsrtd { tFilterEmbeddedRefFilterType tFilterEmbeddedRefInsertFltrId tFilterEmbeddedRefEmbeddedFltrId tFilterEmbeddedRefOffset args } {
    set var1 tFltrEmbedRefInfEntryCntInsrtd
    set thisMethod ::EsrFilter::getTFltrEmbedRefInfEntryCntInsrtd
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterEmbeddedRefFilterType $tFilterEmbeddedRefInsertFltrId $tFilterEmbeddedRefEmbeddedFltrId $tFilterEmbeddedRefOffset ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrEmbedEntryInsrtEntryId { tFltrEmbedEntryFilterType tFltrEmbedEntryInsertFltrId tFltrEmbedEntryEmbeddedFltrId tFltrEmbedEntryEmbeddedEntryId args } {
    set var1 tFltrEmbedEntryInsrtEntryId
    set thisMethod ::EsrFilter::getTFltrEmbedEntryInsrtEntryId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFltrEmbedEntryFilterType $tFltrEmbedEntryInsertFltrId $tFltrEmbedEntryEmbeddedFltrId $tFltrEmbedEntryEmbeddedEntryId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrEmbedEntryRefOperState { tFltrEmbedEntryFilterType tFltrEmbedEntryInsertFltrId tFltrEmbedEntryEmbeddedFltrId tFltrEmbedEntryEmbeddedEntryId args } {
    set var1 tFltrEmbedEntryRefOperState
    set thisMethod ::EsrFilter::getTFltrEmbedEntryRefOperState
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFltrEmbedEntryFilterType $tFltrEmbedEntryInsertFltrId $tFltrEmbedEntryEmbeddedFltrId $tFltrEmbedEntryEmbeddedEntryId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsExtTbleLstChgd { args } {
    set var1 tIPv6FilterParamsExtTbleLstChgd
    set thisMethod ::EsrFilter::getTIPv6FilterParamsExtTbleLstChgd
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsExtLastChanged { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsExtLastChanged
    set thisMethod ::EsrFilter::getTIPv6FilterParamsExtLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsExtAhExtHdr { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsExtAhExtHdr
    set thisMethod ::EsrFilter::getTIPv6FilterParamsExtAhExtHdr
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsExtAhExtHdr { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsExtAhExtHdr
    set thisMethod ::EsrFilter::setTIPv6FilterParamsExtAhExtHdr
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsExtEspExtHdr { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsExtEspExtHdr
    set thisMethod ::EsrFilter::getTIPv6FilterParamsExtEspExtHdr
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsExtEspExtHdr { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsExtEspExtHdr
    set thisMethod ::EsrFilter::setTIPv6FilterParamsExtEspExtHdr
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsExtNatType { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsExtNatType
    set thisMethod ::EsrFilter::getTIPv6FilterParamsExtNatType
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsExtNatType { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsExtNatType
    set thisMethod ::EsrFilter::setTIPv6FilterParamsExtNatType
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsExtPktLenVal1 { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsExtPktLenVal1
    set thisMethod ::EsrFilter::getTIPv6FilterParamsExtPktLenVal1
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsExtPktLenVal1 { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsExtPktLenVal1
    set thisMethod ::EsrFilter::setTIPv6FilterParamsExtPktLenVal1
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsExtPktLenVal2 { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsExtPktLenVal2
    set thisMethod ::EsrFilter::getTIPv6FilterParamsExtPktLenVal2
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsExtPktLenVal2 { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsExtPktLenVal2
    set thisMethod ::EsrFilter::setTIPv6FilterParamsExtPktLenVal2
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsExtPktLenOper { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsExtPktLenOper
    set thisMethod ::EsrFilter::getTIPv6FilterParamsExtPktLenOper
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsExtPktLenOper { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsExtPktLenOper
    set thisMethod ::EsrFilter::setTIPv6FilterParamsExtPktLenOper
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsExtHopLimitVal1 { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsExtHopLimitVal1
    set thisMethod ::EsrFilter::getTIPv6FilterParamsExtHopLimitVal1
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsExtHopLimitVal1 { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsExtHopLimitVal1
    set thisMethod ::EsrFilter::setTIPv6FilterParamsExtHopLimitVal1
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsExtHopLimitVal2 { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsExtHopLimitVal2
    set thisMethod ::EsrFilter::getTIPv6FilterParamsExtHopLimitVal2
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsExtHopLimitVal2 { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsExtHopLimitVal2
    set thisMethod ::EsrFilter::setTIPv6FilterParamsExtHopLimitVal2
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsExtHopLimitOper { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsExtHopLimitOper
    set thisMethod ::EsrFilter::getTIPv6FilterParamsExtHopLimitOper
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsExtHopLimitOper { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsExtHopLimitOper
    set thisMethod ::EsrFilter::setTIPv6FilterParamsExtHopLimitOper
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsExtEgressPBR { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsExtEgressPBR
    set thisMethod ::EsrFilter::getTIPv6FilterParamsExtEgressPBR
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsExtEgressPBR { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsExtEgressPBR
    set thisMethod ::EsrFilter::setTIPv6FilterParamsExtEgressPBR
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsExtEsi { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsExtEsi
    set thisMethod ::EsrFilter::getTIPv6FilterParamsExtEsi
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsExtEsi { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsExtEsi
    set thisMethod ::EsrFilter::setTIPv6FilterParamsExtEsi
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsExtFwdEsiSvcId { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsExtFwdEsiSvcId
    set thisMethod ::EsrFilter::getTIPv6FilterParamsExtFwdEsiSvcId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsExtFwdEsiSvcId { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsExtFwdEsiSvcId
    set thisMethod ::EsrFilter::setTIPv6FilterParamsExtFwdEsiSvcId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsExtFwdEsiVRtrId { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsExtFwdEsiVRtrId
    set thisMethod ::EsrFilter::getTIPv6FilterParamsExtFwdEsiVRtrId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsExtFwdEsiVRtrId { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsExtFwdEsiVRtrId
    set thisMethod ::EsrFilter::setTIPv6FilterParamsExtFwdEsiVRtrId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsExtFwdEsiSFIp { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsExtFwdEsiSFIp
    set thisMethod ::EsrFilter::getTIPv6FilterParamsExtFwdEsiSFIp
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsExtFwdEsiSFIp { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsExtFwdEsiSFIp
    set thisMethod ::EsrFilter::setTIPv6FilterParamsExtFwdEsiSFIp
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPv6FilterParamsExtPbrDwnAction { tIPv6FilterId tIPv6FilterParamsIndex args } {
    set var1 tIPv6FilterParamsExtPbrDwnAction
    set thisMethod ::EsrFilter::getTIPv6FilterParamsExtPbrDwnAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPv6FilterParamsExtPbrDwnAction { tIPv6FilterId tIPv6FilterParamsIndex value args } {
    set var1 tIPv6FilterParamsExtPbrDwnAction
    set thisMethod ::EsrFilter::setTIPv6FilterParamsExtPbrDwnAction
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPv6FilterId $tIPv6FilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterEmbedOpenflowTableLstChg { args } {
    set var1 tFilterEmbedOpenflowTableLstChg
    set thisMethod ::EsrFilter::getTFilterEmbedOpenflowTableLstChg
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterEmbedOpenflowRowStatus { tFilterEmbedOpenflowOfsName tFilterEmbedOpenflowFilterType tFilterEmbedOpenflowInsertFltrId tFilterEmbedOpenflowOffset args } {
    set var1 tFilterEmbedOpenflowRowStatus
    set thisMethod ::EsrFilter::getTFilterEmbedOpenflowRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterEmbedOpenflowOfsName $tFilterEmbedOpenflowFilterType $tFilterEmbedOpenflowInsertFltrId $tFilterEmbedOpenflowOffset ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterEmbedOpenflowRowStatus { tFilterEmbedOpenflowOfsName tFilterEmbedOpenflowFilterType tFilterEmbedOpenflowInsertFltrId tFilterEmbedOpenflowOffset value args } {
    set var1 tFilterEmbedOpenflowRowStatus
    set thisMethod ::EsrFilter::setTFilterEmbedOpenflowRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterEmbedOpenflowOfsName $tFilterEmbedOpenflowFilterType $tFilterEmbedOpenflowInsertFltrId $tFilterEmbedOpenflowOffset ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterEmbedOpenflowAdminState { tFilterEmbedOpenflowOfsName tFilterEmbedOpenflowFilterType tFilterEmbedOpenflowInsertFltrId tFilterEmbedOpenflowOffset args } {
    set var1 tFilterEmbedOpenflowAdminState
    set thisMethod ::EsrFilter::getTFilterEmbedOpenflowAdminState
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterEmbedOpenflowOfsName $tFilterEmbedOpenflowFilterType $tFilterEmbedOpenflowInsertFltrId $tFilterEmbedOpenflowOffset ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterEmbedOpenflowAdminState { tFilterEmbedOpenflowOfsName tFilterEmbedOpenflowFilterType tFilterEmbedOpenflowInsertFltrId tFilterEmbedOpenflowOffset value args } {
    set var1 tFilterEmbedOpenflowAdminState
    set thisMethod ::EsrFilter::setTFilterEmbedOpenflowAdminState
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterEmbedOpenflowOfsName $tFilterEmbedOpenflowFilterType $tFilterEmbedOpenflowInsertFltrId $tFilterEmbedOpenflowOffset ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterEmbedOpenflowOperState { tFilterEmbedOpenflowOfsName tFilterEmbedOpenflowFilterType tFilterEmbedOpenflowInsertFltrId tFilterEmbedOpenflowOffset args } {
    set var1 tFilterEmbedOpenflowOperState
    set thisMethod ::EsrFilter::getTFilterEmbedOpenflowOperState
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterEmbedOpenflowOfsName $tFilterEmbedOpenflowFilterType $tFilterEmbedOpenflowInsertFltrId $tFilterEmbedOpenflowOffset ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterEmbedOflowSvcContext { tFilterEmbedOpenflowOfsName tFilterEmbedOpenflowFilterType tFilterEmbedOpenflowInsertFltrId tFilterEmbedOpenflowOffset args } {
    set var1 tFilterEmbedOflowSvcContext
    set thisMethod ::EsrFilter::getTFilterEmbedOflowSvcContext
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterEmbedOpenflowOfsName $tFilterEmbedOpenflowFilterType $tFilterEmbedOpenflowInsertFltrId $tFilterEmbedOpenflowOffset ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterEmbedOflowSvcContext { tFilterEmbedOpenflowOfsName tFilterEmbedOpenflowFilterType tFilterEmbedOpenflowInsertFltrId tFilterEmbedOpenflowOffset value args } {
    set var1 tFilterEmbedOflowSvcContext
    set thisMethod ::EsrFilter::setTFilterEmbedOflowSvcContext
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterEmbedOpenflowOfsName $tFilterEmbedOpenflowFilterType $tFilterEmbedOpenflowInsertFltrId $tFilterEmbedOpenflowOffset ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterEmbedOflowSapContextPort { tFilterEmbedOpenflowOfsName tFilterEmbedOpenflowFilterType tFilterEmbedOpenflowInsertFltrId tFilterEmbedOpenflowOffset args } {
    set var1 tFilterEmbedOflowSapContextPort
    set thisMethod ::EsrFilter::getTFilterEmbedOflowSapContextPort
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterEmbedOpenflowOfsName $tFilterEmbedOpenflowFilterType $tFilterEmbedOpenflowInsertFltrId $tFilterEmbedOpenflowOffset ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterEmbedOflowSapContextPort { tFilterEmbedOpenflowOfsName tFilterEmbedOpenflowFilterType tFilterEmbedOpenflowInsertFltrId tFilterEmbedOpenflowOffset value args } {
    set var1 tFilterEmbedOflowSapContextPort
    set thisMethod ::EsrFilter::setTFilterEmbedOflowSapContextPort
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterEmbedOpenflowOfsName $tFilterEmbedOpenflowFilterType $tFilterEmbedOpenflowInsertFltrId $tFilterEmbedOpenflowOffset ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterEmbedOflowSapContextEncap { tFilterEmbedOpenflowOfsName tFilterEmbedOpenflowFilterType tFilterEmbedOpenflowInsertFltrId tFilterEmbedOpenflowOffset args } {
    set var1 tFilterEmbedOflowSapContextEncap
    set thisMethod ::EsrFilter::getTFilterEmbedOflowSapContextEncap
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterEmbedOpenflowOfsName $tFilterEmbedOpenflowFilterType $tFilterEmbedOpenflowInsertFltrId $tFilterEmbedOpenflowOffset ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterEmbedOflowSapContextEncap { tFilterEmbedOpenflowOfsName tFilterEmbedOpenflowFilterType tFilterEmbedOpenflowInsertFltrId tFilterEmbedOpenflowOffset value args } {
    set var1 tFilterEmbedOflowSapContextEncap
    set thisMethod ::EsrFilter::setTFilterEmbedOflowSapContextEncap
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterEmbedOpenflowOfsName $tFilterEmbedOpenflowFilterType $tFilterEmbedOpenflowInsertFltrId $tFilterEmbedOpenflowOffset ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterEmbedOflowContextType { tFilterEmbedOpenflowOfsName tFilterEmbedOpenflowFilterType tFilterEmbedOpenflowInsertFltrId tFilterEmbedOpenflowOffset args } {
    set var1 tFilterEmbedOflowContextType
    set thisMethod ::EsrFilter::getTFilterEmbedOflowContextType
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterEmbedOpenflowOfsName $tFilterEmbedOpenflowFilterType $tFilterEmbedOpenflowInsertFltrId $tFilterEmbedOpenflowOffset ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterEmbedOflowContextType { tFilterEmbedOpenflowOfsName tFilterEmbedOpenflowFilterType tFilterEmbedOpenflowInsertFltrId tFilterEmbedOpenflowOffset value args } {
    set var1 tFilterEmbedOflowContextType
    set thisMethod ::EsrFilter::setTFilterEmbedOflowContextType
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterEmbedOpenflowOfsName $tFilterEmbedOpenflowFilterType $tFilterEmbedOpenflowInsertFltrId $tFilterEmbedOpenflowOffset ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrEmbedOfInfoEntryCnt { tFilterEmbedOpenflowOfsName tFilterEmbedOpenflowFilterType tFilterEmbedOpenflowInsertFltrId tFilterEmbedOpenflowOffset args } {
    set var1 tFltrEmbedOfInfoEntryCnt
    set thisMethod ::EsrFilter::getTFltrEmbedOfInfoEntryCnt
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterEmbedOpenflowOfsName $tFilterEmbedOpenflowFilterType $tFilterEmbedOpenflowInsertFltrId $tFilterEmbedOpenflowOffset ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrEmbedOfInfoEntryCntInsrtd { tFilterEmbedOpenflowOfsName tFilterEmbedOpenflowFilterType tFilterEmbedOpenflowInsertFltrId tFilterEmbedOpenflowOffset args } {
    set var1 tFltrEmbedOfInfoEntryCntInsrtd
    set thisMethod ::EsrFilter::getTFltrEmbedOfInfoEntryCntInsrtd
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterEmbedOpenflowOfsName $tFilterEmbedOpenflowFilterType $tFilterEmbedOpenflowInsertFltrId $tFilterEmbedOpenflowOffset ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrEmbedOfEntryInsrtEntryId { tFltrEmbedOfEntryOfsName tFltrEmbedOfEntryFilterType tFltrEmbedOfEntryInsertFltrId tFltrEmbedOfEntryOfEntryId args } {
    set var1 tFltrEmbedOfEntryInsrtEntryId
    set thisMethod ::EsrFilter::getTFltrEmbedOfEntryInsrtEntryId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFltrEmbedOfEntryOfsName $tFltrEmbedOfEntryFilterType $tFltrEmbedOfEntryInsertFltrId $tFltrEmbedOfEntryOfEntryId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrEmbedOfEntryInsrtEntryState { tFltrEmbedOfEntryOfsName tFltrEmbedOfEntryFilterType tFltrEmbedOfEntryInsertFltrId tFltrEmbedOfEntryOfEntryId args } {
    set var1 tFltrEmbedOfEntryInsrtEntryState
    set thisMethod ::EsrFilter::getTFltrEmbedOfEntryInsrtEntryState
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFltrEmbedOfEntryOfsName $tFltrEmbedOfEntryFilterType $tFltrEmbedOfEntryInsertFltrId $tFltrEmbedOfEntryOfEntryId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsExtTbleLstChgd { args } {
    set var1 tIPFilterParamsExtTbleLstChgd
    set thisMethod ::EsrFilter::getTIPFilterParamsExtTbleLstChgd
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsExtLastChanged { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsExtLastChanged
    set thisMethod ::EsrFilter::getTIPFilterParamsExtLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsExtPktLenVal1 { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsExtPktLenVal1
    set thisMethod ::EsrFilter::getTIPFilterParamsExtPktLenVal1
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsExtPktLenVal1 { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsExtPktLenVal1
    set thisMethod ::EsrFilter::setTIPFilterParamsExtPktLenVal1
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsExtPktLenVal2 { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsExtPktLenVal2
    set thisMethod ::EsrFilter::getTIPFilterParamsExtPktLenVal2
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsExtPktLenVal2 { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsExtPktLenVal2
    set thisMethod ::EsrFilter::setTIPFilterParamsExtPktLenVal2
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsExtPktLenOper { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsExtPktLenOper
    set thisMethod ::EsrFilter::getTIPFilterParamsExtPktLenOper
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsExtPktLenOper { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsExtPktLenOper
    set thisMethod ::EsrFilter::setTIPFilterParamsExtPktLenOper
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsExtTTLVal1 { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsExtTTLVal1
    set thisMethod ::EsrFilter::getTIPFilterParamsExtTTLVal1
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsExtTTLVal1 { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsExtTTLVal1
    set thisMethod ::EsrFilter::setTIPFilterParamsExtTTLVal1
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsExtTTLVal2 { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsExtTTLVal2
    set thisMethod ::EsrFilter::getTIPFilterParamsExtTTLVal2
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsExtTTLVal2 { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsExtTTLVal2
    set thisMethod ::EsrFilter::setTIPFilterParamsExtTTLVal2
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsExtTTLOper { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsExtTTLOper
    set thisMethod ::EsrFilter::getTIPFilterParamsExtTTLOper
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsExtTTLOper { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsExtTTLOper
    set thisMethod ::EsrFilter::setTIPFilterParamsExtTTLOper
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsExtEgressPBR { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsExtEgressPBR
    set thisMethod ::EsrFilter::getTIPFilterParamsExtEgressPBR
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsExtEgressPBR { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsExtEgressPBR
    set thisMethod ::EsrFilter::setTIPFilterParamsExtEgressPBR
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsExtEsi { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsExtEsi
    set thisMethod ::EsrFilter::getTIPFilterParamsExtEsi
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsExtEsi { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsExtEsi
    set thisMethod ::EsrFilter::setTIPFilterParamsExtEsi
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsExtFwdEsiSvcId { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsExtFwdEsiSvcId
    set thisMethod ::EsrFilter::getTIPFilterParamsExtFwdEsiSvcId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsExtFwdEsiSvcId { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsExtFwdEsiSvcId
    set thisMethod ::EsrFilter::setTIPFilterParamsExtFwdEsiSvcId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsExtFwdEsiVRtrId { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsExtFwdEsiVRtrId
    set thisMethod ::EsrFilter::getTIPFilterParamsExtFwdEsiVRtrId
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsExtFwdEsiVRtrId { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsExtFwdEsiVRtrId
    set thisMethod ::EsrFilter::setTIPFilterParamsExtFwdEsiVRtrId
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsExtFwdEsiSFIp { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsExtFwdEsiSFIp
    set thisMethod ::EsrFilter::getTIPFilterParamsExtFwdEsiSFIp
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsExtFwdEsiSFIp { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsExtFwdEsiSFIp
    set thisMethod ::EsrFilter::setTIPFilterParamsExtFwdEsiSFIp
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTIPFilterParamsExtPbrDwnAction { tIPFilterId tIPFilterParamsIndex args } {
    set var1 tIPFilterParamsExtPbrDwnAction
    set thisMethod ::EsrFilter::getTIPFilterParamsExtPbrDwnAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTIPFilterParamsExtPbrDwnAction { tIPFilterId tIPFilterParamsIndex value args } {
    set var1 tIPFilterParamsExtPbrDwnAction
    set thisMethod ::EsrFilter::setTIPFilterParamsExtPbrDwnAction
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tIPFilterId $tIPFilterParamsIndex ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterRPlcyDstTableLastChg { args } {
    set var1 tFilterRPlcyDstTableLastChg
    set thisMethod ::EsrFilter::getTFilterRPlcyDstTableLastChg
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPDstLastChanged { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPDstLastChanged
    set thisMethod ::EsrFilter::getTFltrRPDstLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPDstRowStatus { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPDstRowStatus
    set thisMethod ::EsrFilter::getTFltrRPDstRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPDstRowStatus { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr value args } {
    set var1 tFltrRPDstRowStatus
    set thisMethod ::EsrFilter::setTFltrRPDstRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPDstAdminState { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPDstAdminState
    set thisMethod ::EsrFilter::getTFltrRPDstAdminState
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPDstAdminState { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr value args } {
    set var1 tFltrRPDstAdminState
    set thisMethod ::EsrFilter::setTFltrRPDstAdminState
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPDstOperState { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPDstOperState
    set thisMethod ::EsrFilter::getTFltrRPDstOperState
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPDstDescription { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPDstDescription
    set thisMethod ::EsrFilter::getTFltrRPDstDescription
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPDstDescription { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr value args } {
    set var1 tFltrRPDstDescription
    set thisMethod ::EsrFilter::setTFltrRPDstDescription
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPDstAdminPriority { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPDstAdminPriority
    set thisMethod ::EsrFilter::getTFltrRPDstAdminPriority
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPDstAdminPriority { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr value args } {
    set var1 tFltrRPDstAdminPriority
    set thisMethod ::EsrFilter::setTFltrRPDstAdminPriority
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPDstOperPriority { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPDstOperPriority
    set thisMethod ::EsrFilter::getTFltrRPDstOperPriority
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterRPlcySNMPTestTableLastChg { args } {
    set var1 tFilterRPlcySNMPTestTableLastChg
    set thisMethod ::EsrFilter::getTFilterRPlcySNMPTestTableLastChg
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTLastChanged { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTLastChanged
    set thisMethod ::EsrFilter::getTFltrRPSnmpTLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTRowStatus { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTRowStatus
    set thisMethod ::EsrFilter::getTFltrRPSnmpTRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpTRowStatus { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest value args } {
    set var1 tFltrRPSnmpTRowStatus
    set thisMethod ::EsrFilter::setTFltrRPSnmpTRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTOID { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTOID
    set thisMethod ::EsrFilter::getTFltrRPSnmpTOID
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpTOID { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest value args } {
    set var1 tFltrRPSnmpTOID
    set thisMethod ::EsrFilter::setTFltrRPSnmpTOID
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTCommunity { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTCommunity
    set thisMethod ::EsrFilter::getTFltrRPSnmpTCommunity
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpTCommunity { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest value args } {
    set var1 tFltrRPSnmpTCommunity
    set thisMethod ::EsrFilter::setTFltrRPSnmpTCommunity
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTSnmpVersion { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTSnmpVersion
    set thisMethod ::EsrFilter::getTFltrRPSnmpTSnmpVersion
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpTSnmpVersion { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest value args } {
    set var1 tFltrRPSnmpTSnmpVersion
    set thisMethod ::EsrFilter::setTFltrRPSnmpTSnmpVersion
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTInterval { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTInterval
    set thisMethod ::EsrFilter::getTFltrRPSnmpTInterval
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpTInterval { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest value args } {
    set var1 tFltrRPSnmpTInterval
    set thisMethod ::EsrFilter::setTFltrRPSnmpTInterval
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTTimeout { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTTimeout
    set thisMethod ::EsrFilter::getTFltrRPSnmpTTimeout
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpTTimeout { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest value args } {
    set var1 tFltrRPSnmpTTimeout
    set thisMethod ::EsrFilter::setTFltrRPSnmpTTimeout
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTDropCount { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTDropCount
    set thisMethod ::EsrFilter::getTFltrRPSnmpTDropCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpTDropCount { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest value args } {
    set var1 tFltrRPSnmpTDropCount
    set thisMethod ::EsrFilter::setTFltrRPSnmpTDropCount
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTHoldDown { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTHoldDown
    set thisMethod ::EsrFilter::getTFltrRPSnmpTHoldDown
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpTHoldDown { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest value args } {
    set var1 tFltrRPSnmpTHoldDown
    set thisMethod ::EsrFilter::setTFltrRPSnmpTHoldDown
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTHoldDownRemain { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTHoldDownRemain
    set thisMethod ::EsrFilter::getTFltrRPSnmpTHoldDownRemain
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTLastActionTime { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTLastActionTime
    set thisMethod ::EsrFilter::getTFltrRPSnmpTLastActionTime
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTLastOID { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTLastOID
    set thisMethod ::EsrFilter::getTFltrRPSnmpTLastOID
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTLastType { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTLastType
    set thisMethod ::EsrFilter::getTFltrRPSnmpTLastType
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTLastCounter32Val { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTLastCounter32Val
    set thisMethod ::EsrFilter::getTFltrRPSnmpTLastCounter32Val
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTLastUnsigned32Val { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTLastUnsigned32Val
    set thisMethod ::EsrFilter::getTFltrRPSnmpTLastUnsigned32Val
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTLastTimeTicksVal { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTLastTimeTicksVal
    set thisMethod ::EsrFilter::getTFltrRPSnmpTLastTimeTicksVal
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTLastInt32Val { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTLastInt32Val
    set thisMethod ::EsrFilter::getTFltrRPSnmpTLastInt32Val
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTLastOctetStringVal { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTLastOctetStringVal
    set thisMethod ::EsrFilter::getTFltrRPSnmpTLastOctetStringVal
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTLastIpAddressVal { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTLastIpAddressVal
    set thisMethod ::EsrFilter::getTFltrRPSnmpTLastIpAddressVal
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTLastOidVal { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTLastOidVal
    set thisMethod ::EsrFilter::getTFltrRPSnmpTLastOidVal
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTLastCounter64Val { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTLastCounter64Val
    set thisMethod ::EsrFilter::getTFltrRPSnmpTLastCounter64Val
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTLastOpaqueVal { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTLastOpaqueVal
    set thisMethod ::EsrFilter::getTFltrRPSnmpTLastOpaqueVal
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTLastAction { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTLastAction
    set thisMethod ::EsrFilter::getTFltrRPSnmpTLastAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTLastPrioChange { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTLastPrioChange
    set thisMethod ::EsrFilter::getTFltrRPSnmpTLastPrioChange
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpTNextRespIndex { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest args } {
    set var1 tFltrRPSnmpTNextRespIndex
    set thisMethod ::EsrFilter::getTFltrRPSnmpTNextRespIndex
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterRPlcySNMPRespTableLastChg { args } {
    set var1 tFilterRPlcySNMPRespTableLastChg
    set thisMethod ::EsrFilter::getTFilterRPlcySNMPRespTableLastChg
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpRspLastChanged { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId args } {
    set var1 tFltrRPSnmpRspLastChanged
    set thisMethod ::EsrFilter::getTFltrRPSnmpRspLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpRspRowStatus { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId args } {
    set var1 tFltrRPSnmpRspRowStatus
    set thisMethod ::EsrFilter::getTFltrRPSnmpRspRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpRspRowStatus { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId value args } {
    set var1 tFltrRPSnmpRspRowStatus
    set thisMethod ::EsrFilter::setTFltrRPSnmpRspRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpRspAction { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId args } {
    set var1 tFltrRPSnmpRspAction
    set thisMethod ::EsrFilter::getTFltrRPSnmpRspAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpRspAction { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId value args } {
    set var1 tFltrRPSnmpRspAction
    set thisMethod ::EsrFilter::setTFltrRPSnmpRspAction
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpRspPrioChange { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId args } {
    set var1 tFltrRPSnmpRspPrioChange
    set thisMethod ::EsrFilter::getTFltrRPSnmpRspPrioChange
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpRspPrioChange { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId value args } {
    set var1 tFltrRPSnmpRspPrioChange
    set thisMethod ::EsrFilter::setTFltrRPSnmpRspPrioChange
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpRspOID { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId args } {
    set var1 tFltrRPSnmpRspOID
    set thisMethod ::EsrFilter::getTFltrRPSnmpRspOID
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpRspOID { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId value args } {
    set var1 tFltrRPSnmpRspOID
    set thisMethod ::EsrFilter::setTFltrRPSnmpRspOID
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpRspType { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId args } {
    set var1 tFltrRPSnmpRspType
    set thisMethod ::EsrFilter::getTFltrRPSnmpRspType
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpRspType { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId value args } {
    set var1 tFltrRPSnmpRspType
    set thisMethod ::EsrFilter::setTFltrRPSnmpRspType
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpRspCounter32Val { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId args } {
    set var1 tFltrRPSnmpRspCounter32Val
    set thisMethod ::EsrFilter::getTFltrRPSnmpRspCounter32Val
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpRspCounter32Val { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId value args } {
    set var1 tFltrRPSnmpRspCounter32Val
    set thisMethod ::EsrFilter::setTFltrRPSnmpRspCounter32Val
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpRspUnsigned32Val { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId args } {
    set var1 tFltrRPSnmpRspUnsigned32Val
    set thisMethod ::EsrFilter::getTFltrRPSnmpRspUnsigned32Val
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpRspUnsigned32Val { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId value args } {
    set var1 tFltrRPSnmpRspUnsigned32Val
    set thisMethod ::EsrFilter::setTFltrRPSnmpRspUnsigned32Val
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpRspTimeTicksVal { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId args } {
    set var1 tFltrRPSnmpRspTimeTicksVal
    set thisMethod ::EsrFilter::getTFltrRPSnmpRspTimeTicksVal
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpRspTimeTicksVal { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId value args } {
    set var1 tFltrRPSnmpRspTimeTicksVal
    set thisMethod ::EsrFilter::setTFltrRPSnmpRspTimeTicksVal
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpRspInt32Val { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId args } {
    set var1 tFltrRPSnmpRspInt32Val
    set thisMethod ::EsrFilter::getTFltrRPSnmpRspInt32Val
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpRspInt32Val { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId value args } {
    set var1 tFltrRPSnmpRspInt32Val
    set thisMethod ::EsrFilter::setTFltrRPSnmpRspInt32Val
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpRspOctetStringVal { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId args } {
    set var1 tFltrRPSnmpRspOctetStringVal
    set thisMethod ::EsrFilter::getTFltrRPSnmpRspOctetStringVal
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpRspOctetStringVal { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId value args } {
    set var1 tFltrRPSnmpRspOctetStringVal
    set thisMethod ::EsrFilter::setTFltrRPSnmpRspOctetStringVal
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpRspIpAddressVal { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId args } {
    set var1 tFltrRPSnmpRspIpAddressVal
    set thisMethod ::EsrFilter::getTFltrRPSnmpRspIpAddressVal
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpRspIpAddressVal { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId value args } {
    set var1 tFltrRPSnmpRspIpAddressVal
    set thisMethod ::EsrFilter::setTFltrRPSnmpRspIpAddressVal
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpRspOidVal { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId args } {
    set var1 tFltrRPSnmpRspOidVal
    set thisMethod ::EsrFilter::getTFltrRPSnmpRspOidVal
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpRspOidVal { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId value args } {
    set var1 tFltrRPSnmpRspOidVal
    set thisMethod ::EsrFilter::setTFltrRPSnmpRspOidVal
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpRspCounter64Val { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId args } {
    set var1 tFltrRPSnmpRspCounter64Val
    set thisMethod ::EsrFilter::getTFltrRPSnmpRspCounter64Val
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpRspCounter64Val { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId value args } {
    set var1 tFltrRPSnmpRspCounter64Val
    set thisMethod ::EsrFilter::setTFltrRPSnmpRspCounter64Val
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPSnmpRspOpaqueVal { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId args } {
    set var1 tFltrRPSnmpRspOpaqueVal
    set thisMethod ::EsrFilter::getTFltrRPSnmpRspOpaqueVal
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPSnmpRspOpaqueVal { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPSnmpTest tFltrRPSnmpRspId value args } {
    set var1 tFltrRPSnmpRspOpaqueVal
    set thisMethod ::EsrFilter::setTFltrRPSnmpRspOpaqueVal
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPSnmpTest $tFltrRPSnmpRspId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterRPlcyURLTestTableLastChg { args } {
    set var1 tFilterRPlcyURLTestTableLastChg
    set thisMethod ::EsrFilter::getTFilterRPlcyURLTestTableLastChg
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUrlTLastChanged { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest args } {
    set var1 tFltrRPUrlTLastChanged
    set thisMethod ::EsrFilter::getTFltrRPUrlTLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUrlTRowStatus { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest args } {
    set var1 tFltrRPUrlTRowStatus
    set thisMethod ::EsrFilter::getTFltrRPUrlTRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPUrlTRowStatus { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest value args } {
    set var1 tFltrRPUrlTRowStatus
    set thisMethod ::EsrFilter::setTFltrRPUrlTRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUrlTUrl { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest args } {
    set var1 tFltrRPUrlTUrl
    set thisMethod ::EsrFilter::getTFltrRPUrlTUrl
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPUrlTUrl { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest value args } {
    set var1 tFltrRPUrlTUrl
    set thisMethod ::EsrFilter::setTFltrRPUrlTUrl
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUrlTHttpVersion { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest args } {
    set var1 tFltrRPUrlTHttpVersion
    set thisMethod ::EsrFilter::getTFltrRPUrlTHttpVersion
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPUrlTHttpVersion { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest value args } {
    set var1 tFltrRPUrlTHttpVersion
    set thisMethod ::EsrFilter::setTFltrRPUrlTHttpVersion
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUrlTInterval { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest args } {
    set var1 tFltrRPUrlTInterval
    set thisMethod ::EsrFilter::getTFltrRPUrlTInterval
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPUrlTInterval { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest value args } {
    set var1 tFltrRPUrlTInterval
    set thisMethod ::EsrFilter::setTFltrRPUrlTInterval
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUrlTTimeout { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest args } {
    set var1 tFltrRPUrlTTimeout
    set thisMethod ::EsrFilter::getTFltrRPUrlTTimeout
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPUrlTTimeout { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest value args } {
    set var1 tFltrRPUrlTTimeout
    set thisMethod ::EsrFilter::setTFltrRPUrlTTimeout
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUrlTDropCount { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest args } {
    set var1 tFltrRPUrlTDropCount
    set thisMethod ::EsrFilter::getTFltrRPUrlTDropCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPUrlTDropCount { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest value args } {
    set var1 tFltrRPUrlTDropCount
    set thisMethod ::EsrFilter::setTFltrRPUrlTDropCount
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUrlTHoldDown { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest args } {
    set var1 tFltrRPUrlTHoldDown
    set thisMethod ::EsrFilter::getTFltrRPUrlTHoldDown
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPUrlTHoldDown { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest value args } {
    set var1 tFltrRPUrlTHoldDown
    set thisMethod ::EsrFilter::setTFltrRPUrlTHoldDown
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUrlTHoldDownRemain { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest args } {
    set var1 tFltrRPUrlTHoldDownRemain
    set thisMethod ::EsrFilter::getTFltrRPUrlTHoldDownRemain
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUrlTLastActionTime { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest args } {
    set var1 tFltrRPUrlTLastActionTime
    set thisMethod ::EsrFilter::getTFltrRPUrlTLastActionTime
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUrlTLastRetCode { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest args } {
    set var1 tFltrRPUrlTLastRetCode
    set thisMethod ::EsrFilter::getTFltrRPUrlTLastRetCode
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUrlTLastAction { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest args } {
    set var1 tFltrRPUrlTLastAction
    set thisMethod ::EsrFilter::getTFltrRPUrlTLastAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUrlTLastPrioChange { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest args } {
    set var1 tFltrRPUrlTLastPrioChange
    set thisMethod ::EsrFilter::getTFltrRPUrlTLastPrioChange
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterRPlcyURLRespTableLastChg { args } {
    set var1 tFilterRPlcyURLRespTableLastChg
    set thisMethod ::EsrFilter::getTFilterRPlcyURLRespTableLastChg
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUrlTRspLastChanged { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest tFltrRPUrlTRspLowRspCode tFltrRPUrlTRspHighRspCode args } {
    set var1 tFltrRPUrlTRspLastChanged
    set thisMethod ::EsrFilter::getTFltrRPUrlTRspLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest $tFltrRPUrlTRspLowRspCode $tFltrRPUrlTRspHighRspCode ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUrlTRspRowStatus { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest tFltrRPUrlTRspLowRspCode tFltrRPUrlTRspHighRspCode args } {
    set var1 tFltrRPUrlTRspRowStatus
    set thisMethod ::EsrFilter::getTFltrRPUrlTRspRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest $tFltrRPUrlTRspLowRspCode $tFltrRPUrlTRspHighRspCode ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPUrlTRspRowStatus { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest tFltrRPUrlTRspLowRspCode tFltrRPUrlTRspHighRspCode value args } {
    set var1 tFltrRPUrlTRspRowStatus
    set thisMethod ::EsrFilter::setTFltrRPUrlTRspRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest $tFltrRPUrlTRspLowRspCode $tFltrRPUrlTRspHighRspCode ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUrlTRspAction { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest tFltrRPUrlTRspLowRspCode tFltrRPUrlTRspHighRspCode args } {
    set var1 tFltrRPUrlTRspAction
    set thisMethod ::EsrFilter::getTFltrRPUrlTRspAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest $tFltrRPUrlTRspLowRspCode $tFltrRPUrlTRspHighRspCode ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPUrlTRspAction { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest tFltrRPUrlTRspLowRspCode tFltrRPUrlTRspHighRspCode value args } {
    set var1 tFltrRPUrlTRspAction
    set thisMethod ::EsrFilter::setTFltrRPUrlTRspAction
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest $tFltrRPUrlTRspLowRspCode $tFltrRPUrlTRspHighRspCode ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUrlTRspPrioChange { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest tFltrRPUrlTRspLowRspCode tFltrRPUrlTRspHighRspCode args } {
    set var1 tFltrRPUrlTRspPrioChange
    set thisMethod ::EsrFilter::getTFltrRPUrlTRspPrioChange
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest $tFltrRPUrlTRspLowRspCode $tFltrRPUrlTRspHighRspCode ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPUrlTRspPrioChange { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr tFltrRPUrlTest tFltrRPUrlTRspLowRspCode tFltrRPUrlTRspHighRspCode value args } {
    set var1 tFltrRPUrlTRspPrioChange
    set thisMethod ::EsrFilter::setTFltrRPUrlTRspPrioChange
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr $tFltrRPUrlTest $tFltrRPUrlTRspLowRspCode $tFltrRPUrlTRspHighRspCode ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterRPlcyPingTestTableLastChg { args } {
    set var1 tFilterRPlcyPingTestTableLastChg
    set thisMethod ::EsrFilter::getTFilterRPlcyPingTestTableLastChg
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPPingTLastChanged { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPPingTLastChanged
    set thisMethod ::EsrFilter::getTFltrRPPingTLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPPingTRowStatus { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPPingTRowStatus
    set thisMethod ::EsrFilter::getTFltrRPPingTRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPPingTRowStatus { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr value args } {
    set var1 tFltrRPPingTRowStatus
    set thisMethod ::EsrFilter::setTFltrRPPingTRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPPingTInterval { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPPingTInterval
    set thisMethod ::EsrFilter::getTFltrRPPingTInterval
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPPingTInterval { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr value args } {
    set var1 tFltrRPPingTInterval
    set thisMethod ::EsrFilter::setTFltrRPPingTInterval
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPPingTTimeout { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPPingTTimeout
    set thisMethod ::EsrFilter::getTFltrRPPingTTimeout
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPPingTTimeout { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr value args } {
    set var1 tFltrRPPingTTimeout
    set thisMethod ::EsrFilter::setTFltrRPPingTTimeout
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPPingTDropCount { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPPingTDropCount
    set thisMethod ::EsrFilter::getTFltrRPPingTDropCount
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPPingTDropCount { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr value args } {
    set var1 tFltrRPPingTDropCount
    set thisMethod ::EsrFilter::setTFltrRPPingTDropCount
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPPingTHoldDown { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPPingTHoldDown
    set thisMethod ::EsrFilter::getTFltrRPPingTHoldDown
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPPingTHoldDown { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr value args } {
    set var1 tFltrRPPingTHoldDown
    set thisMethod ::EsrFilter::setTFltrRPPingTHoldDown
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPPingTHoldDownRemain { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPPingTHoldDownRemain
    set thisMethod ::EsrFilter::getTFltrRPPingTHoldDownRemain
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPPingTLastActionTime { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPPingTLastActionTime
    set thisMethod ::EsrFilter::getTFltrRPPingTLastActionTime
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPPingTLastAction { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPPingTLastAction
    set thisMethod ::EsrFilter::getTFltrRPPingTLastAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterRPlcyUcastRtTTableLastChg { args } {
    set var1 tFilterRPlcyUcastRtTTableLastChg
    set thisMethod ::EsrFilter::getTFilterRPlcyUcastRtTTableLastChg
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUcastRtTLastChanged { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPUcastRtTLastChanged
    set thisMethod ::EsrFilter::getTFltrRPUcastRtTLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUcastRtTRowStatus { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPUcastRtTRowStatus
    set thisMethod ::EsrFilter::getTFltrRPUcastRtTRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFltrRPUcastRtTRowStatus { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr value args } {
    set var1 tFltrRPUcastRtTRowStatus
    set thisMethod ::EsrFilter::setTFltrRPUcastRtTRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUcastRtTLastActionTime { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPUcastRtTLastActionTime
    set thisMethod ::EsrFilter::getTFltrRPUcastRtTLastActionTime
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFltrRPUcastRtTLastAction { tFilterRedirectPolicy tFltrRPDstAddrType tFltrRPDstAddr args } {
    set var1 tFltrRPUcastRtTLastAction
    set thisMethod ::EsrFilter::getTFltrRPUcastRtTLastAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterRedirectPolicy $tFltrRPDstAddrType $tFltrRPDstAddr ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterSystemFilterTableLastChg { args } {
    set var1 tFilterSystemFilterTableLastChg
    set thisMethod ::EsrFilter::getTFilterSystemFilterTableLastChg
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterSystemFilterLastChanged { tFilterSystemFilterType tFilterSystemFilterId args } {
    set var1 tFilterSystemFilterLastChanged
    set thisMethod ::EsrFilter::getTFilterSystemFilterLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterSystemFilterType $tFilterSystemFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTFilterSystemFilterRowStatus { tFilterSystemFilterType tFilterSystemFilterId args } {
    set var1 tFilterSystemFilterRowStatus
    set thisMethod ::EsrFilter::getTFilterSystemFilterRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tFilterSystemFilterType $tFilterSystemFilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTFilterSystemFilterRowStatus { tFilterSystemFilterType tFilterSystemFilterId value args } {
    set var1 tFilterSystemFilterRowStatus
    set thisMethod ::EsrFilter::setTFilterSystemFilterRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tFilterSystemFilterType $tFilterSystemFilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcp6FilterTblLastChanged { args } {
    set var1 tDhcp6FilterTblLastChanged
    set thisMethod ::EsrFilter::getTDhcp6FilterTblLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcp6FilterRowStatus { tDhcp6FilterId args } {
    set var1 tDhcp6FilterRowStatus
    set thisMethod ::EsrFilter::getTDhcp6FilterRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcp6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcp6FilterRowStatus { tDhcp6FilterId value args } {
    set var1 tDhcp6FilterRowStatus
    set thisMethod ::EsrFilter::setTDhcp6FilterRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcp6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcp6FilterLastChanged { tDhcp6FilterId args } {
    set var1 tDhcp6FilterLastChanged
    set thisMethod ::EsrFilter::getTDhcp6FilterLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcp6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcp6FilterDescription { tDhcp6FilterId args } {
    set var1 tDhcp6FilterDescription
    set thisMethod ::EsrFilter::getTDhcp6FilterDescription
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcp6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcp6FilterDescription { tDhcp6FilterId value args } {
    set var1 tDhcp6FilterDescription
    set thisMethod ::EsrFilter::setTDhcp6FilterDescription
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcp6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcp6FilterDefAction { tDhcp6FilterId args } {
    set var1 tDhcp6FilterDefAction
    set thisMethod ::EsrFilter::getTDhcp6FilterDefAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcp6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcp6FilterDefAction { tDhcp6FilterId value args } {
    set var1 tDhcp6FilterDefAction
    set thisMethod ::EsrFilter::setTDhcp6FilterDefAction
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcp6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcp6FilterDefActionFlags { tDhcp6FilterId args } {
    set var1 tDhcp6FilterDefActionFlags
    set thisMethod ::EsrFilter::getTDhcp6FilterDefActionFlags
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcp6FilterId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcp6FilterDefActionFlags { tDhcp6FilterId value args } {
    set var1 tDhcp6FilterDefActionFlags
    set thisMethod ::EsrFilter::setTDhcp6FilterDefActionFlags
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcp6FilterId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcp6FilterParamsTblLastChanged { args } {
    set var1 tDhcp6FilterParamsTblLastChanged
    set thisMethod ::EsrFilter::getTDhcp6FilterParamsTblLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get $var1.0 ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcp6FilterParamsRowStatus { tDhcp6FilterId tDhcp6FilterParamsId args } {
    set var1 tDhcp6FilterParamsRowStatus
    set thisMethod ::EsrFilter::getTDhcp6FilterParamsRowStatus
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcp6FilterId $tDhcp6FilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcp6FilterParamsRowStatus { tDhcp6FilterId tDhcp6FilterParamsId value args } {
    set var1 tDhcp6FilterParamsRowStatus
    set thisMethod ::EsrFilter::setTDhcp6FilterParamsRowStatus
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcp6FilterId $tDhcp6FilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcp6FilterParamsLastChanged { tDhcp6FilterId tDhcp6FilterParamsId args } {
    set var1 tDhcp6FilterParamsLastChanged
    set thisMethod ::EsrFilter::getTDhcp6FilterParamsLastChanged
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcp6FilterId $tDhcp6FilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcp6FilterParamsOptionNumber { tDhcp6FilterId tDhcp6FilterParamsId args } {
    set var1 tDhcp6FilterParamsOptionNumber
    set thisMethod ::EsrFilter::getTDhcp6FilterParamsOptionNumber
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcp6FilterId $tDhcp6FilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcp6FilterParamsOptionNumber { tDhcp6FilterId tDhcp6FilterParamsId value args } {
    set var1 tDhcp6FilterParamsOptionNumber
    set thisMethod ::EsrFilter::setTDhcp6FilterParamsOptionNumber
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcp6FilterId $tDhcp6FilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcp6FilterParamsOptionMatch { tDhcp6FilterId tDhcp6FilterParamsId args } {
    set var1 tDhcp6FilterParamsOptionMatch
    set thisMethod ::EsrFilter::getTDhcp6FilterParamsOptionMatch
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcp6FilterId $tDhcp6FilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcp6FilterParamsOptionMatch { tDhcp6FilterId tDhcp6FilterParamsId value args } {
    set var1 tDhcp6FilterParamsOptionMatch
    set thisMethod ::EsrFilter::setTDhcp6FilterParamsOptionMatch
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcp6FilterId $tDhcp6FilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcp6FilterParamsAction { tDhcp6FilterId tDhcp6FilterParamsId args } {
    set var1 tDhcp6FilterParamsAction
    set thisMethod ::EsrFilter::getTDhcp6FilterParamsAction
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcp6FilterId $tDhcp6FilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcp6FilterParamsAction { tDhcp6FilterId tDhcp6FilterParamsId value args } {
    set var1 tDhcp6FilterParamsAction
    set thisMethod ::EsrFilter::setTDhcp6FilterParamsAction
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcp6FilterId $tDhcp6FilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcp6FilterParamsOptionValue { tDhcp6FilterId tDhcp6FilterParamsId args } {
    set var1 tDhcp6FilterParamsOptionValue
    set thisMethod ::EsrFilter::getTDhcp6FilterParamsOptionValue
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcp6FilterId $tDhcp6FilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcp6FilterParamsOptionValue { tDhcp6FilterId tDhcp6FilterParamsId value args } {
    set var1 tDhcp6FilterParamsOptionValue
    set thisMethod ::EsrFilter::setTDhcp6FilterParamsOptionValue
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcp6FilterId $tDhcp6FilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::getTDhcp6FilterParamsActionFlags { tDhcp6FilterId tDhcp6FilterParamsId args } {
    set var1 tDhcp6FilterParamsActionFlags
    set thisMethod ::EsrFilter::getTDhcp6FilterParamsActionFlags
    set defComm [ $this cget -community ]
    set option(return) value
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this get [ Tnm::mib pack $var1 $tDhcp6FilterId $tDhcp6FilterParamsId ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

itcl::body ::EsrFilter::setTDhcp6FilterParamsActionFlags { tDhcp6FilterId tDhcp6FilterParamsId value args } {
    set var1 tDhcp6FilterParamsActionFlags
    set thisMethod ::EsrFilter::setTDhcp6FilterParamsActionFlags
    set defComm [ $this cget -community ]
    set option(return) code
    set option(context) default
    getopt option $args

    switch -exact [ $this cget -mgmt_mode ] {
        snmp {
            if { $option(context) != "default" } {
                $this configure -community $option(context)
            }

            set snmpResultVarbind [ $this set_ [ list \
                [ list [ Tnm::mib pack $var1 $tDhcp6FilterId $tDhcp6FilterParamsId ] $value ] \
            ] ]
            $this writeToDeviceLog "$thisMethod - $snmpResultVarbind"
            set returnCode [ parse_returncode $snmpResultVarbind ]
            set returnValue [ parse_value $snmpResultVarbind ]
        }
        default {
            $this writeToDeviceLog "$thisMethod - ERROR: Management mode\
                  ([ $this cget -mgmt_mode ]) not yet implemented for this method!"
            return ERROR
        }
    }
    if { $option(return) == "code" } {
        set returnString $returnCode
    } else {
        set returnString $returnValue
    }
    if { $option(context) != "default" } {
        $this configure -community $defComm
    }

    return $returnString
}

